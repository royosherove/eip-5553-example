{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ledger",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ledger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "song",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "kind",
          "type": "string"
        }
      ],
      "name": "SongBinding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_song",
          "type": "address"
        }
      ],
      "name": "bindToSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "firstHolder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHolders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Balance[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kind",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ledger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentWork",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "114:208:0:-:0;;;178:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1631:255:4;;;;;;;;;;;;-1:-1:-1;;;1631:255:4;;;;276:7:0;;299:5;305:7;299:5;305:7;2044:5:10;:13;299:5:0;2044::10;:13;:::i;:::-;-1:-1:-1;2067:7:10;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;1794:6:4::1;:16:::0;;-1:-1:-1;;;;;;1794:16:4::1;-1:-1:-1::0;;;;;1794:16:4;::::1;;::::0;;-1:-1:-1;1824:4:4::1;:12;1831:5:::0;1824:4;:12:::1;:::i;:::-;-1:-1:-1::0;1850:28:4::1;1856:7:::0;1864:13:::1;1850:5;:28::i;:::-;1631:255:::0;;;;178:142:0;;;114:208;;8402:389:10;-1:-1:-1;;;;;8485:21:10;;8477:65;;;;-1:-1:-1;;;8477:65:10;;4561:2:23;8477:65:10;;;4543:21:23;4600:2;4580:18;;;4573:30;4639:33;4619:18;;;4612:61;4690:18;;8477:65:10;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:10;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:10;;5095:25:23;;;-1:-1:-1;;;;;8688:37:10;;;8705:1;;8688:37;;5083:2:23;5068:18;8688:37:10;;;;;;;8402:389;;:::o;11786:121::-;;;;:::o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:23:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1255:16;;-1:-1:-1;;;;;1300:31:23;;1290:42;;1280:70;;1346:1;1343;1336:12;1280:70;1418:2;1403:18;;1397:25;1369:5;;-1:-1:-1;;;;;;1471:14:23;;;1468:34;;;1498:1;1495;1488:12;1468:34;1521:61;1574:7;1565:6;1554:9;1550:22;1521:61;:::i;:::-;1511:71;;1628:2;1617:9;1613:18;1607:25;1591:41;;1657:2;1647:8;1644:16;1641:36;;;1673:1;1670;1663:12;1641:36;;1696:63;1751:7;1740:8;1729:9;1725:24;1696:63;:::i;:::-;1686:73;;;1036:729;;;;;:::o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;2281:545::-;2383:2;2378:3;2375:11;2372:448;;;2419:1;2444:5;2440:2;2433:17;2489:4;2485:2;2475:19;2559:2;2547:10;2543:19;2540:1;2536:27;2530:4;2526:38;2595:4;2583:10;2580:20;2577:47;;;-1:-1:-1;2618:4:23;2577:47;2673:2;2668:3;2664:12;2661:1;2657:20;2651:4;2647:31;2637:41;;2728:82;2746:2;2739:5;2736:13;2728:82;;;2791:17;;;2772:1;2761:13;2728:82;;;2732:3;;;2281:545;;;:::o;3002:1352::-;3122:10;;-1:-1:-1;;;;;3144:30:23;;3141:56;;;3177:18;;:::i;:::-;3206:97;3296:6;3256:38;3288:4;3282:11;3256:38;:::i;:::-;3250:4;3206:97;:::i;:::-;3358:4;;3422:2;3411:14;;3439:1;3434:663;;;;4141:1;4158:6;4155:89;;;-1:-1:-1;4210:19:23;;;4204:26;4155:89;-1:-1:-1;;2959:1:23;2955:11;;;2951:24;2947:29;2937:40;2983:1;2979:11;;;2934:57;4257:81;;3404:944;;3434:663;2228:1;2221:14;;;2265:4;2252:18;;-1:-1:-1;;3470:20:23;;;3588:236;3602:7;3599:1;3596:14;3588:236;;;3691:19;;;3685:26;3670:42;;3783:27;;;;3751:1;3739:14;;;;3618:19;;3588:236;;;3592:3;3852:6;3843:7;3840:19;3837:201;;;3913:19;;;3907:26;-1:-1:-1;;3996:1:23;3992:14;;;4008:3;3988:24;3984:37;3980:42;3965:58;3950:74;;3837:201;-1:-1:-1;;;;;4084:1:23;4068:14;;;4064:22;4051:36;;-1:-1:-1;3002:1352:23:o;4719:225::-;4759:3;4790:1;4786:6;4783:1;4780:13;4777:136;;;4835:10;4830:3;4826:20;4823:1;4816:31;4870:4;4867:1;4860:15;4898:4;4895:1;4888:15;4777:136;-1:-1:-1;4929:9:23;;4719:225::o;4949:177::-;114:208:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "114:208:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;320:18:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98:10;;;:::i;4433:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1396:14:23;;1389:22;1371:41;;1359:2;1344:18;4433:197:10;1231:187:23;344:25:4;;;;;-1:-1:-1;;;;;344:25:4;;;;;;-1:-1:-1;;;;;1587:55:23;;;1569:74;;1557:2;1542:18;344:25:4;1423:226:23;3244:106:10;3331:12;;3244:106;;;1800:25:23;;;1788:2;1773:18;3244:106:10;1654:177:23;409:26:4;;;;;-1:-1:-1;;;;;409:26:4;;;1301:324;;;;;;:::i;:::-;;:::i;3093:91:10:-;;;3175:2;2311:36:23;;2299:2;2284:18;3093:91:10;2169:184:23;5873:234:10;;;;;;:::i;:::-;;:::i;376:21:4:-;;;;;-1:-1:-1;;;;;376:21:4;;;1968:91;;;:::i;:::-;;;;;;;:::i;1892:71::-;1953:3;1892:71;;3408:125:10;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:10;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;1070:226:4:-;;;;;;:::i;:::-;;:::i;3976:149:10:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:10;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2064:463:4;;;;;;:::i;:::-;;:::i;:::-;;320:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2156:98:10:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:18;4570:32:10;719:10:18;4586:7:10;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:10;;4433:197;-1:-1:-1;;;4433:197:10:o;1301:324:4:-;1428:4;1444:11;1458:34;1477:4;1482:2;1485:6;1458:18;:34::i;:::-;1444:48;;1510:6;1502:37;;;;-1:-1:-1;;;1502:37:4;;4298:2:23;1502:37:4;;;4280:21:23;4337:2;4317:18;;;4310:30;4376:21;4356:18;;;4349:49;4415:18;;1502:37:4;;;;;;;;;1549:20;1564:4;1549:14;:20::i;:::-;1579:18;1594:2;1579:14;:18::i;:::-;-1:-1:-1;1614:4:4;;1301:324;-1:-1:-1;;;;1301:324:4:o;5873:234:10:-;719:10:18;5961:4:10;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:10;;;;;;;;;;5961:4;;719:10:18;6015:64:10;;719:10:18;;4091:27:10;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;1968:91:4:-;2011:16;2045:7;2038:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2038:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:91;:::o;2367:102:10:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:18;6687:4:10;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:10;;;;;;;;;;6687:4;;719:10:18;6831:15:10;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:10;;4968:2:23;6803:85:10;;;4950:21:23;5007:2;4987:18;;;4980:30;5046:34;5026:18;;;5019:62;5117:7;5097:18;;;5090:35;5142:19;;6803:85:10;4766:401:23;6803:85:10;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;1070:226:4:-;1141:4;1157:11;1171:25;1186:2;1189:6;1171:14;:25::i;:::-;1157:39;;1214:6;1206:34;;;;-1:-1:-1;;;1206:34:4;;5374:2:23;1206:34:4;;;5356:21:23;5413:2;5393:18;;;5386:30;5452:17;5432:18;;;5425:45;5487:18;;1206:34:4;5172:339:23;1206:34:4;1250:18;1265:2;1250:14;:18::i;2064:463::-;2140:6;;-1:-1:-1;;;;;2140:6:4;719:10:18;-1:-1:-1;;;;;2124:22:4;;2116:62;;;;-1:-1:-1;;;2116:62:4;;5718:2:23;2116:62:4;;;5700:21:23;5757:2;5737:18;;;5730:30;5796:29;5776:18;;;5769:57;5843:18;;2116:62:4;5516:351:23;2116:62:4;2196:10;;-1:-1:-1;;;;;2196:10:4;:24;2188:58;;;;-1:-1:-1;;;2188:58:4;;6074:2:23;2188:58:4;;;6056:21:23;6113:2;6093:18;;;6086:30;6152:23;6132:18;;;6125:51;6193:18;;2188:58:4;5872:345:23;2188:58:4;-1:-1:-1;;;;;2264:19:4;;2256:44;;;;-1:-1:-1;;;2256:44:4;;6424:2:23;2256:44:4;;;6406:21:23;6463:2;6443:18;;;6436:30;6502:14;6482:18;;;6475:42;6534:18;;2256:44:4;6222:336:23;2256:44:4;2310:10;:18;;-1:-1:-1;;2310:18:4;-1:-1:-1;;;;;2310:18:4;;;;;;;;;2380:6;;;;;-1:-1:-1;3508:18:10;;;;;;;;;;;2347:173:4;;2416:4;;2515;2347:173;;;;;;;;;;:::i;:::-;;;;;;;;2064:463;:::o;10110:370:10:-;-1:-1:-1;;;;;10241:19:10;;10233:68;;;;-1:-1:-1;;;10233:68:10;;8542:2:23;10233:68:10;;;8524:21:23;8581:2;8561:18;;;8554:30;8620:34;8600:18;;;8593:62;8691:6;8671:18;;;8664:34;8715:19;;10233:68:10;8340:400:23;10233:68:10;-1:-1:-1;;;;;10319:21:10;;10311:68;;;;-1:-1:-1;;;10311:68:10;;8947:2:23;10311:68:10;;;8929:21:23;8986:2;8966:18;;;8959:30;9025:34;9005:18;;;8998:62;9096:4;9076:18;;;9069:32;9118:19;;10311:68:10;8745:398:23;10311:68:10;-1:-1:-1;;;;;10390:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1800:25:23;;;10441:32:10;;1773:18:23;10441:32:10;;;;;;;10110:370;;;:::o;5192:286::-;5319:4;719:10:18;5375:38:10;5391:4;719:10:18;5406:6:10;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;524:541:4:-;-1:-1:-1;;;;;589:25:4;;;;;;:14;:25;;;;;;:30;:58;;;;-1:-1:-1;636:11:4;;-1:-1:-1;;;;;623:24:4;;;636:11;;623:24;;589:58;585:474;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;693:20:4;;;;;3508:18:10;;;;;;;;;;727:8:4;;;:31;;;772:7;:15;;;;;;;;-1:-1:-1;772:15:4;;;;;;;;;;;;;;;-1:-1:-1;;772:15:4;-1:-1:-1;;;;;772:15:4;;;;;;;;;;;;;;;;829:14;:16;;772:15;829:16;:::i;:::-;-1:-1:-1;;;;;801:25:4;;;;;;:14;:25;;;;;:44;;;;873:7;:10;;:7;;801:25;873:10;;;;:::i;:::-;;;;;;;;;;;;;;:17;859:11;:31;;-1:-1:-1;;859:31:4;-1:-1:-1;;;;;873:17:4;;;859:31;;;;;;-1:-1:-1;524:541:4;:::o;585:474::-;-1:-1:-1;;;;;3508:18:10;;3482:7;3508:18;;;;;;;;;;;;992:14:4;:25;;;;;;;984:7;:34;;:7;;992:25;984:34;;;;;;:::i;:::-;;;;;;;;;;;:41;;:64;;;;524:541;:::o;3729:189:10:-;3808:4;719:10:18;3862:28:10;719:10:18;3879:2:10;3883:6;3862:9;:28::i;10761:441::-;-1:-1:-1;;;;;4091:18:10;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10957:37:10;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:10;;9669:2:23;11010:68:10;;;9651:21:23;9708:2;9688:18;;;9681:30;9747:31;9727:18;;;9720:59;9796:18;;11010:68:10;9467:353:23;11010:68:10;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:10;;7593:68;;;;-1:-1:-1;;;7593:68:10;;10027:2:23;7593:68:10;;;10009:21:23;10066:2;10046:18;;;10039:30;10105:34;10085:18;;;10078:62;10176:7;10156:18;;;10149:35;10201:19;;7593:68:10;9825:401:23;7593:68:10;-1:-1:-1;;;;;7679:16:10;;7671:64;;;;-1:-1:-1;;;7671:64:10;;10433:2:23;7671:64:10;;;10415:21:23;10472:2;10452:18;;;10445:30;10511:34;10491:18;;;10484:62;10582:5;10562:18;;;10555:33;10605:19;;7671:64:10;10231:399:23;7671:64:10;-1:-1:-1;;;;;7817:15:10;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:10;;10837:2:23;7842:72:10;;;10819:21:23;10876:2;10856:18;;;10849:30;10915:34;10895:18;;;10888:62;10986:8;10966:18;;;10959:36;11012:19;;7842:72:10;10635:402:23;7842:72:10;-1:-1:-1;;;;;7948:15:10;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:10;8054:4;-1:-1:-1;;;;;8045:26:10;;8064:6;8045:26;;;;1800:25:23;;1788:2;1773:18;;1654:177;8045:26:10;;;;;;;;8082:37;11786:121;169:597:23;281:4;310:2;339;328:9;321:21;371:6;365:13;414:6;409:2;398:9;394:18;387:34;439:1;449:140;463:6;460:1;457:13;449:140;;;558:14;;;554:23;;548:30;524:17;;;543:2;520:26;513:66;478:10;;449:140;;;607:6;604:1;601:13;598:91;;;677:1;672:2;663:6;652:9;648:22;644:31;637:42;598:91;-1:-1:-1;750:2:23;729:15;-1:-1:-1;;725:29:23;710:45;;;;757:2;706:54;;169:597;-1:-1:-1;;;169:597:23:o;771:196::-;839:20;;-1:-1:-1;;;;;888:54:23;;878:65;;868:93;;957:1;954;947:12;868:93;771:196;;;:::o;972:254::-;1040:6;1048;1101:2;1089:9;1080:7;1076:23;1072:32;1069:52;;;1117:1;1114;1107:12;1069:52;1140:29;1159:9;1140:29;:::i;:::-;1130:39;1216:2;1201:18;;;;1188:32;;-1:-1:-1;;;972:254:23:o;1836:328::-;1913:6;1921;1929;1982:2;1970:9;1961:7;1957:23;1953:32;1950:52;;;1998:1;1995;1988:12;1950:52;2021:29;2040:9;2021:29;:::i;:::-;2011:39;;2069:38;2103:2;2092:9;2088:18;2069:38;:::i;:::-;2059:48;;2154:2;2143:9;2139:18;2126:32;2116:42;;1836:328;;;;;:::o;2358:835::-;2577:2;2629:21;;;2699:13;;2602:18;;;2721:22;;;2548:4;;2577:2;2762;;2780:18;;;;2821:15;;;2548:4;2864:303;2878:6;2875:1;2872:13;2864:303;;;2937:13;;2979:9;;-1:-1:-1;;;;;2975:58:23;2963:71;;3074:11;;3068:18;3054:12;;;3047:40;3107:12;;;;3142:15;;;;2900:1;2893:9;2864:303;;;-1:-1:-1;3184:3:23;;2358:835;-1:-1:-1;;;;;;;2358:835:23:o;3198:186::-;3257:6;3310:2;3298:9;3289:7;3285:23;3281:32;3278:52;;;3326:1;3323;3316:12;3278:52;3349:29;3368:9;3349:29;:::i;:::-;3339:39;3198:186;-1:-1:-1;;;3198:186:23:o;3389:260::-;3457:6;3465;3518:2;3506:9;3497:7;3493:23;3489:32;3486:52;;;3534:1;3531;3524:12;3486:52;3557:29;3576:9;3557:29;:::i;:::-;3547:39;;3605:38;3639:2;3628:9;3624:18;3605:38;:::i;:::-;3595:48;;3389:260;;;;;:::o;3654:437::-;3733:1;3729:12;;;;3776;;;3797:61;;3851:4;3843:6;3839:17;3829:27;;3797:61;3904:2;3896:6;3893:14;3873:18;3870:38;3867:218;;-1:-1:-1;;;3938:1:23;3931:88;4042:4;4039:1;4032:15;4070:4;4067:1;4060:15;3867:218;;3654:437;;;:::o;4444:184::-;-1:-1:-1;;;4493:1:23;4486:88;4593:4;4590:1;4583:15;4617:4;4614:1;4607:15;4633:128;4673:3;4704:1;4700:6;4697:1;4694:13;4691:39;;;4710:18;;:::i;:::-;-1:-1:-1;4746:9:23;;4633:128::o;6689:1646::-;6910:4;-1:-1:-1;;;;;7020:2:23;7012:6;7008:15;6997:9;6990:34;7043:2;7093;7085:6;7081:15;7076:2;7065:9;7061:18;7054:43;7145:2;7137:6;7133:15;7128:2;7117:9;7113:18;7106:43;7185:6;7180:2;7169:9;7165:18;7158:34;7229:3;7223;7212:9;7208:19;7201:32;7253:1;7242:12;;7286:6;7280:13;7316:3;7338:1;7366:9;7362:2;7358:18;7348:28;;7426:2;7415:9;7411:18;7448;7438:61;;7492:4;7484:6;7480:17;7470:27;;7438:61;7545:2;7537:6;7534:14;7514:18;7511:38;7508:222;;-1:-1:-1;;;7579:3:23;7572:90;7685:4;7682:1;7675:15;7715:4;7710:3;7703:17;7508:222;7801:3;7786:19;;101;;;144:14;;;7830:18;7857:128;;;;7999:1;7994:315;;;;7823:486;;7857:128;-1:-1:-1;;7890:24:23;;7878:37;;7958:14;;7951:22;7948:1;7944:30;7935:40;;;-1:-1:-1;7857:128:23;;7994:315;6636:1;6629:14;;;6673:4;6660:18;;8089:1;8103:165;8117:6;8114:1;8111:13;8103:165;;;8195:14;;8182:11;;;8175:35;8238:16;;;;8132:10;;8103:165;;;8288:11;;;-1:-1:-1;;7823:486:23;-1:-1:-1;8326:3:23;;6689:1646;-1:-1:-1;;;;;;;;;;;;;6689:1646:23:o;9148:125::-;9188:4;9216:1;9213;9210:8;9207:34;;;9221:18;;:::i;:::-;-1:-1:-1;9258:9:23;;9148:125::o;9278:184::-;-1:-1:-1;;;9327:1:23;9320:88;9427:4;9424:1;9417:15;9451:4;9448:1;9441:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "bindToSong(address)": "decfa258",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "firstHolder()": "1bf7628b",
    "getHolders()": "5fe8e7cc",
    "increaseAllowance(address,uint256)": "39509351",
    "kind()": "04baa00b",
    "ledger()": "56397c35",
    "max()": "6ac5db19",
    "name()": "06fdde03",
    "parentWork()": "1683252d",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ledger\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ledger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"song\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"kind\",\"type\":\"string\"}],\"name\":\"SongBinding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_song\",\"type\":\"address\"}],\"name\":\"bindToSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstHolder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHolders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Balance[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kind\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentWork\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getHolders()\":{\"details\":\"this array represt ALL past and current holders of the ERC20 underlying token,  with current active balance this takes some work but it helps discover all holders of a royalty interest in a single logical place. see example implementation of this in SongRegistration.sol\",\"returns\":{\"_0\":\"an array of Balance structs : Balance {address holder, uint256 amount}\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"kind()\":{\"notice\":\"returns a string representing what kind of ROyalty interest this is.  i.e in the music business this might be \\\"Recording\\\" or \\\"Composition\\\" royalty interests\"},\"max()\":{\"notice\":\"returns a fixed amoutn of tokens that cannot be changed and represent 100% of the royalty interest for this token. i.e ideally you'd just return '100' here , where each token represents 1% of a royalty interest.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CompositionRoyaltyToken.sol\":\"CompositionRoyaltyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/CompositionRoyaltyToken.sol\":{\"keccak256\":\"0xd45750a030335dcf3dc3cd86cd5cb67e550f9abb9ba1c2a0987a8261a7bdbac6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://102ba90edbae2fdcdb88e1636d09f0f61a1f85dd3daf40fa2b150ca8e1cc1467\",\"dweb:/ipfs/QmRVK9UHEABw7pu3rYPxwcS2wtwLhv9pqp8Po2iuVSS5ci\"]},\"contracts/interfaces/BaseMusicPortionToken.sol\":{\"keccak256\":\"0x5cc66b92ff3be4375c6e311cdc80b9010cbd2941fe0eafbcf6368d71afb36075\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://47ee9bbe9318ff8bc2548d39e5ff5775489be549076a74c4e589ba039ca641f9\",\"dweb:/ipfs/QmVv9FnB5GNYXBZnUzS9Dmvn55H4p6qKaN72G29A43Zt8g\"]},\"contracts/interfaces/IRoyaltyPortionToken.sol\":{\"keccak256\":\"0xe04ae9a76e6e6cd0e3a83e46f69466c7d05a0f17be13c73125ca0404ce228813\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8642b8b97439b0901dcf4099614ab11890a914766eefa8458181c2d47a2f004\",\"dweb:/ipfs/QmYwZN5SrpWrbUjJg5QGXxQ3chGb9fzJT56ZXtjFMeQzbM\"]},\"contracts/interfaces/Structs.sol\":{\"keccak256\":\"0x4a651c3aea455e9b4cbd9b170af510697e6c2a69224e07c2dc2b2ed4a4e84e0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce93d02cb7a6742a15cdd14bcf4d8005b11dbe2291673ef4113d6ce2143f95f1\",\"dweb:/ipfs/QmbMFhJb8QYJFc4g6R7YwheL7Dgyq2gSrxQB36ZK8LzVFA\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ledger",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "ledger",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "song",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "kind",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SongBinding",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_song",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bindToSong"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "firstHolder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHolders",
          "outputs": [
            {
              "internalType": "struct Balance[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kind",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ledger",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "max",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "parentWork",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getHolders()": {
            "details": "this array represt ALL past and current holders of the ERC20 underlying token,  with current active balance this takes some work but it helps discover all holders of a royalty interest in a single logical place. see example implementation of this in SongRegistration.sol",
            "returns": {
              "_0": "an array of Balance structs : Balance {address holder, uint256 amount}"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "kind()": {
            "notice": "returns a string representing what kind of ROyalty interest this is.  i.e in the music business this might be \"Recording\" or \"Composition\" royalty interests"
          },
          "max()": {
            "notice": "returns a fixed amoutn of tokens that cannot be changed and represent 100% of the royalty interest for this token. i.e ideally you'd just return '100' here , where each token represents 1% of a royalty interest."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/CompositionRoyaltyToken.sol": "CompositionRoyaltyToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/CompositionRoyaltyToken.sol": {
        "keccak256": "0xd45750a030335dcf3dc3cd86cd5cb67e550f9abb9ba1c2a0987a8261a7bdbac6",
        "urls": [
          "bzz-raw://102ba90edbae2fdcdb88e1636d09f0f61a1f85dd3daf40fa2b150ca8e1cc1467",
          "dweb:/ipfs/QmRVK9UHEABw7pu3rYPxwcS2wtwLhv9pqp8Po2iuVSS5ci"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/BaseMusicPortionToken.sol": {
        "keccak256": "0x5cc66b92ff3be4375c6e311cdc80b9010cbd2941fe0eafbcf6368d71afb36075",
        "urls": [
          "bzz-raw://47ee9bbe9318ff8bc2548d39e5ff5775489be549076a74c4e589ba039ca641f9",
          "dweb:/ipfs/QmVv9FnB5GNYXBZnUzS9Dmvn55H4p6qKaN72G29A43Zt8g"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IRoyaltyPortionToken.sol": {
        "keccak256": "0xe04ae9a76e6e6cd0e3a83e46f69466c7d05a0f17be13c73125ca0404ce228813",
        "urls": [
          "bzz-raw://b8642b8b97439b0901dcf4099614ab11890a914766eefa8458181c2d47a2f004",
          "dweb:/ipfs/QmYwZN5SrpWrbUjJg5QGXxQ3chGb9fzJT56ZXtjFMeQzbM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/Structs.sol": {
        "keccak256": "0x4a651c3aea455e9b4cbd9b170af510697e6c2a69224e07c2dc2b2ed4a4e84e0b",
        "urls": [
          "bzz-raw://ce93d02cb7a6742a15cdd14bcf4d8005b11dbe2291673ef4113d6ce2143f95f1",
          "dweb:/ipfs/QmbMFhJb8QYJFc4g6R7YwheL7Dgyq2gSrxQB36ZK8LzVFA"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/CompositionRoyaltyToken.sol",
    "id": 22,
    "exportedSymbols": {
      "Balance": [
        830
      ],
      "BaseMusicPortionToken": [
        786
      ],
      "CompositionRoyaltyToken": [
        21
      ],
      "Context": [
        3186
      ],
      "ERC20": [
        1738
      ],
      "IERC20": [
        1816
      ],
      "IERC20Metadata": [
        1841
      ],
      "IRoyaltyPortionToken": [
        823
      ],
      "RoyaltyTokenData": [
        855
      ],
      "SongMintingParams": [
        867
      ],
      "SplitInfo": [
        846
      ],
      "SplitTarget": [
        837
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:286:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "39:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "64:48:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/BaseMusicPortionToken.sol",
        "file": "./interfaces/BaseMusicPortionToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22,
        "sourceUnit": 787,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21,
        "nodeType": "ContractDefinition",
        "src": "114:208:0",
        "nodes": [
          {
            "id": 20,
            "nodeType": "FunctionDefinition",
            "src": "178:142:0",
            "nodes": [],
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "313:7:0",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13,
                    "name": "_ledger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "276:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "636f6d706f736974696f6e",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "285:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9b4f1bd65a6ed3c28066ef3d4d61257cefaecc6066043f5f582ce59904903f9d",
                      "typeString": "literal_string \"composition\""
                    },
                    "value": "composition"
                  },
                  {
                    "id": 15,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "299:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "305:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 17,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12,
                  "name": "BaseMusicPortionToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 786,
                  "src": "254:21:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "254:59:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "_ledger",
                  "nameLocation": "199:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "191:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "191:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "221:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "207:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "241:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "227:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "190:59:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:0:0"
            },
            "scope": 21,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "BaseMusicPortionToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 786,
              "src": "150:21:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "150:21:0"
          }
        ],
        "canonicalName": "CompositionRoyaltyToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21,
          786,
          823,
          1738,
          1841,
          1816,
          3186
        ],
        "name": "CompositionRoyaltyToken",
        "nameLocation": "123:23:0",
        "scope": 22,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 0
}