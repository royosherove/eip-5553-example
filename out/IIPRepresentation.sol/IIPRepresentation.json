{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "byAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldFileHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newFileHash",
          "type": "string"
        }
      ],
      "name": "MetadaDataChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newUri",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newFileHash",
          "type": "string"
        }
      ],
      "name": "changeMetadataURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kind",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ledger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadataURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "royaltyPortionTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "changeMetadataURI(string,string)": "5655c6d9",
    "kind()": "04baa00b",
    "ledger()": "56397c35",
    "metadataURI()": "03ee438c",
    "royaltyPortionTokens()": "04f7b05c",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"byAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldFileHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newFileHash\",\"type\":\"string\"}],\"name\":\"MetadaDataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newFileHash\",\"type\":\"string\"}],\"name\":\"changeMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kind\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPortionTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Intellectual Property Representation\",\"events\":{\"MetadaDataChanged(address,string,string,string,string)\":{\"details\":\"event to be triggered whenever metadata URI is changed\",\"params\":{\"byAddress\":\"the addresses that triggered this operation\",\"newFileHash\":\"the hash of the new metadata file\",\"newURI\":\"the URI to the new metadata file\",\"oldFileHash\":\"the hash of the old metadata file before the change\",\"oldURI\":\"the URI to the old metadata file before the change\"}}},\"kind\":\"dev\",\"methods\":{\"changeMetadataURI(string,string)\":{\"params\":{\"_newFileHash\":\"- The hash of the new metadata file for future reference and verification\",\"_newUri\":\"- the URI pointing to a metadata file (file standard is up to the implementer)\"}},\"ledger()\":{\"details\":\"i.e., a registry or registrar, to be implemented in the future\",\"returns\":{\"_0\":\"the address of the contract or EOA that initialized the IP registration\"}},\"metadataURI()\":{\"returns\":{\"_0\":\"the URI of the current metadata file for the II P\"}},\"royaltyPortionTokens()\":{\"details\":\"i.e implementing ERC5501 (IRoyaltyInterestToken interface)\",\"returns\":{\"_0\":\"array of addresses of ERC20 tokens representing royalty portion in the IP\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeMetadataURI(string,string)\":{\"notice\":\"Called with the new URI to an updated metadata file\"},\"kind()\":{\"notice\":\"returns the kind of IP represented. i.e 'video', 'audio', 'image' or something else.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/musical-ip-5553/IIPRepresentation.sol\":\"IIPRepresentation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/musical-ip-5553/IIPRepresentation.sol\":{\"keccak256\":\"0xa56eaeec32f2442febeb3eadbfcaee56c1b50a3b77249d3c23250abfec50ff9c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a476a83530b4c7bf2b44f41249bedeb662a0386712639ba0242649ccaf08465\",\"dweb:/ipfs/QmcB2hoDT3c3zPoMUPH3vUW5GfYWrt2ZmTWmvF6xbZq9TE\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "byAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "oldURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "oldFileHash",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newFileHash",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadaDataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_newUri",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_newFileHash",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeMetadataURI"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "kind",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ledger",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "metadataURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPortionTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "changeMetadataURI(string,string)": {
            "params": {
              "_newFileHash": "- The hash of the new metadata file for future reference and verification",
              "_newUri": "- the URI pointing to a metadata file (file standard is up to the implementer)"
            }
          },
          "ledger()": {
            "details": "i.e., a registry or registrar, to be implemented in the future",
            "returns": {
              "_0": "the address of the contract or EOA that initialized the IP registration"
            }
          },
          "metadataURI()": {
            "returns": {
              "_0": "the URI of the current metadata file for the II P"
            }
          },
          "royaltyPortionTokens()": {
            "details": "i.e implementing ERC5501 (IRoyaltyInterestToken interface)",
            "returns": {
              "_0": "array of addresses of ERC20 tokens representing royalty portion in the IP"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "changeMetadataURI(string,string)": {
            "notice": "Called with the new URI to an updated metadata file"
          },
          "kind()": {
            "notice": "returns the kind of IP represented. i.e 'video', 'audio', 'image' or something else."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/musical-ip-5553/IIPRepresentation.sol": "IIPRepresentation"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/musical-ip-5553/IIPRepresentation.sol": {
        "keccak256": "0xa56eaeec32f2442febeb3eadbfcaee56c1b50a3b77249d3c23250abfec50ff9c",
        "urls": [
          "bzz-raw://9a476a83530b4c7bf2b44f41249bedeb662a0386712639ba0242649ccaf08465",
          "dweb:/ipfs/QmcB2hoDT3c3zPoMUPH3vUW5GfYWrt2ZmTWmvF6xbZq9TE"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/musical-ip-5553/IIPRepresentation.sol",
    "id": 1027,
    "exportedSymbols": {
      "IERC165": [
        25568
      ],
      "IIPRepresentation": [
        1026
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1832:8",
    "nodes": [
      {
        "id": 975,
        "nodeType": "PragmaDirective",
        "src": "39:23:8",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 976,
        "nodeType": "ImportDirective",
        "src": "64:56:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1027,
        "sourceUnit": 23199,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1026,
        "nodeType": "ContractDefinition",
        "src": "190:1680:8",
        "nodes": [
          {
            "id": 985,
            "nodeType": "FunctionDefinition",
            "src": "336:49:8",
            "nodes": [],
            "documentation": {
              "id": 980,
              "nodeType": "StructuredDocumentation",
              "src": "235:96:8",
              "text": "@notice returns the kind of IP represented. i.e 'video', 'audio', 'image' or something else."
            },
            "functionSelector": "04baa00b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kind",
            "nameLocation": "345:4:8",
            "parameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:2:8"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 985,
                  "src": "370:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:15:8"
            },
            "scope": 1026,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 993,
            "nodeType": "FunctionDefinition",
            "src": "663:87:8",
            "nodes": [],
            "documentation": {
              "id": 986,
              "nodeType": "StructuredDocumentation",
              "src": "391:267:8",
              "text": "@notice Called with the new URI to an updated metadata file\n @param _newUri - the URI pointing to a metadata file (file standard is up to the implementer)\n @param _newFileHash - The hash of the new metadata file for future reference and verification"
            },
            "functionSelector": "5655c6d9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "changeMetadataURI",
            "nameLocation": "672:17:8",
            "parameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "_newUri",
                  "nameLocation": "704:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "690:21:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "_newFileHash",
                  "nameLocation": "727:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "713:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "713:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:51:8"
            },
            "returnParameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "749:0:8"
            },
            "scope": 1026,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1000,
            "nodeType": "FunctionDefinition",
            "src": "918:73:8",
            "nodes": [],
            "documentation": {
              "id": 994,
              "nodeType": "StructuredDocumentation",
              "src": "756:157:8",
              "text": "@return array of addresses of ERC20 tokens representing royalty portion in the IP\n @dev i.e implementing ERC5501 (IRoyaltyInterestToken interface)"
            },
            "functionSelector": "04f7b05c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "royaltyPortionTokens",
            "nameLocation": "927:20:8",
            "parameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:8"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "973:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 996,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "973:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 997,
                    "nodeType": "ArrayTypeName",
                    "src": "973:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:18:8"
            },
            "scope": 1026,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1006,
            "nodeType": "FunctionDefinition",
            "src": "1161:50:8",
            "nodes": [],
            "documentation": {
              "id": 1001,
              "nodeType": "StructuredDocumentation",
              "src": "997:159:8",
              "text": "@return the address of the contract or EOA that initialized the IP registration\n @dev i.e., a registry or registrar, to be implemented in the future"
            },
            "functionSelector": "56397c35",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ledger",
            "nameLocation": "1170:6:8",
            "parameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:8"
            },
            "returnParameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "1202:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1201:9:8"
            },
            "scope": 1026,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1012,
            "nodeType": "FunctionDefinition",
            "src": "1283:61:8",
            "nodes": [],
            "documentation": {
              "id": 1007,
              "nodeType": "StructuredDocumentation",
              "src": "1217:61:8",
              "text": "@return the URI of the current metadata file for the II P"
            },
            "functionSelector": "03ee438c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "metadataURI",
            "nameLocation": "1292:11:8",
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:8"
            },
            "returnParameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "1329:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:15:8"
            },
            "scope": 1026,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1025,
            "nodeType": "EventDefinition",
            "src": "1755:113:8",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1013,
              "nodeType": "StructuredDocumentation",
              "src": "1350:400:8",
              "text": "@dev event to be triggered whenever metadata URI is changed\n @param byAddress the addresses that triggered this operation\n @param oldURI the URI to the old metadata file before the change\n @param oldFileHash the hash of the old metadata file before the change\n @param newURI the URI to the new metadata file\n @param newFileHash the hash of the new metadata file"
            },
            "eventSelector": "686f55766127c8792bd5c6f56acd7e5fe07523840b577d774dc2266c38463b1e",
            "name": "MetadaDataChanged",
            "nameLocation": "1761:17:8",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "byAddress",
                  "nameLocation": "1787:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "1779:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1017,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldURI",
                  "nameLocation": "1805:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "1798:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1016,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1019,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldFileHash",
                  "nameLocation": "1820:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "1813:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1021,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newURI",
                  "nameLocation": "1840:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "1833:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFileHash",
                  "nameLocation": "1855:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "1848:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1778:89:8"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 978,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25568,
              "src": "221:7:8"
            },
            "id": 979,
            "nodeType": "InheritanceSpecifier",
            "src": "221:7:8"
          }
        ],
        "canonicalName": "IIPRepresentation",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 977,
          "nodeType": "StructuredDocumentation",
          "src": "122:68:8",
          "text": "\n @dev Interface for Intellectual Property Representation"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          1026,
          25568
        ],
        "name": "IIPRepresentation",
        "nameLocation": "200:17:8",
        "scope": 1027,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 8
}