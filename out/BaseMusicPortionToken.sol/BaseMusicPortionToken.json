{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ledger",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_kind",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ledger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "song",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "kind",
          "type": "string"
        }
      ],
      "name": "SongBinding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_song",
          "type": "address"
        }
      ],
      "name": "bindToSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "firstHolder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHolders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Balance[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kind",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ledger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentWork",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "157:2372:4:-:0;;;1631:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1765:5;1772:7;2044:5:10;:13;1765:5:4;2044::10;:13;:::i;:::-;-1:-1:-1;2067:7:10;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;1794:6:4::1;:16:::0;;-1:-1:-1;;;;;;1794:16:4::1;-1:-1:-1::0;;;;;1794:16:4;::::1;;::::0;;-1:-1:-1;1824:4:4::1;:12;1831:5:::0;1824:4;:12:::1;:::i;:::-;-1:-1:-1::0;1850:28:4::1;1856:7:::0;1864:13:::1;1850:5;:28::i;:::-;1631:255:::0;;;;157:2372;;8402:389:10;-1:-1:-1;;;;;8485:21:10;;8477:65;;;;-1:-1:-1;;;8477:65:10;;4766:2:23;8477:65:10;;;4748:21:23;4805:2;4785:18;;;4778:30;4844:33;4824:18;;;4817:61;4895:18;;8477:65:10;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:10;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:10;;5300:25:23;;;-1:-1:-1;;;;;8688:37:10;;;8705:1;;8688:37;;5288:2:23;5273:18;8688:37:10;;;;;;;8402:389;;:::o;11786:121::-;;;;:::o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:23:o;1036:934::-;1163:6;1171;1179;1187;1240:3;1228:9;1219:7;1215:23;1211:33;1208:53;;;1257:1;1254;1247:12;1208:53;1283:16;;-1:-1:-1;;;;;1328:31:23;;1318:42;;1308:70;;1374:1;1371;1364:12;1308:70;1446:2;1431:18;;1425:25;1397:5;;-1:-1:-1;;;;;;1499:14:23;;;1496:34;;;1526:1;1523;1516:12;1496:34;1549:61;1602:7;1593:6;1582:9;1578:22;1549:61;:::i;:::-;1539:71;;1656:2;1645:9;1641:18;1635:25;1619:41;;1685:2;1675:8;1672:16;1669:36;;;1701:1;1698;1691:12;1669:36;1724:63;1779:7;1768:8;1757:9;1753:24;1724:63;:::i;:::-;1714:73;;1833:2;1822:9;1818:18;1812:25;1796:41;;1862:2;1852:8;1849:16;1846:36;;;1878:1;1875;1868:12;1846:36;;1901:63;1956:7;1945:8;1934:9;1930:24;1901:63;:::i;:::-;1891:73;;;1036:934;;;;;;;:::o;1975:380::-;2054:1;2050:12;;;;2097;;;2118:61;;2172:4;2164:6;2160:17;2150:27;;2118:61;2225:2;2217:6;2214:14;2194:18;2191:38;2188:161;;2271:10;2266:3;2262:20;2259:1;2252:31;2306:4;2303:1;2296:15;2334:4;2331:1;2324:15;2188:161;;1975:380;;;:::o;2486:545::-;2588:2;2583:3;2580:11;2577:448;;;2624:1;2649:5;2645:2;2638:17;2694:4;2690:2;2680:19;2764:2;2752:10;2748:19;2745:1;2741:27;2735:4;2731:38;2800:4;2788:10;2785:20;2782:47;;;-1:-1:-1;2823:4:23;2782:47;2878:2;2873:3;2869:12;2866:1;2862:20;2856:4;2852:31;2842:41;;2933:82;2951:2;2944:5;2941:13;2933:82;;;2996:17;;;2977:1;2966:13;2933:82;;;2937:3;;;2486:545;;;:::o;3207:1352::-;3327:10;;-1:-1:-1;;;;;3349:30:23;;3346:56;;;3382:18;;:::i;:::-;3411:97;3501:6;3461:38;3493:4;3487:11;3461:38;:::i;:::-;3455:4;3411:97;:::i;:::-;3563:4;;3627:2;3616:14;;3644:1;3639:663;;;;4346:1;4363:6;4360:89;;;-1:-1:-1;4415:19:23;;;4409:26;4360:89;-1:-1:-1;;3164:1:23;3160:11;;;3156:24;3152:29;3142:40;3188:1;3184:11;;;3139:57;4462:81;;3609:944;;3639:663;2433:1;2426:14;;;2470:4;2457:18;;-1:-1:-1;;3675:20:23;;;3793:236;3807:7;3804:1;3801:14;3793:236;;;3896:19;;;3890:26;3875:42;;3988:27;;;;3956:1;3944:14;;;;3823:19;;3793:236;;;3797:3;4057:6;4048:7;4045:19;4042:201;;;4118:19;;;4112:26;-1:-1:-1;;4201:1:23;4197:14;;;4213:3;4193:24;4189:37;4185:42;4170:58;4155:74;;4042:201;-1:-1:-1;;;;;4289:1:23;4273:14;;;4269:22;4256:36;;-1:-1:-1;3207:1352:23:o;4924:225::-;4964:3;4995:1;4991:6;4988:1;4985:13;4982:136;;;5040:10;5035:3;5031:20;5028:1;5021:31;5075:4;5072:1;5065:15;5103:4;5100:1;5093:15;4982:136;-1:-1:-1;5134:9:23;;4924:225::o;5154:177::-;157:2372:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "157:2372:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;320:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98:10;;;:::i;4433:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1396:14:23;;1389:22;1371:41;;1359:2;1344:18;4433:197:10;1231:187:23;344:25:4;;;;;-1:-1:-1;;;;;344:25:4;;;;;;-1:-1:-1;;;;;1587:55:23;;;1569:74;;1557:2;1542:18;344:25:4;1423:226:23;3244:106:10;3331:12;;3244:106;;;1800:25:23;;;1788:2;1773:18;3244:106:10;1654:177:23;409:26:4;;;;;-1:-1:-1;;;;;409:26:4;;;1301:324;;;;;;:::i;:::-;;:::i;3093:91:10:-;;;3175:2;2311:36:23;;2299:2;2284:18;3093:91:10;2169:184:23;5873:234:10;;;;;;:::i;:::-;;:::i;376:21:4:-;;;;;-1:-1:-1;;;;;376:21:4;;;1968:91;;;:::i;:::-;;;;;;;:::i;1892:71::-;1953:3;1892:71;;3408:125:10;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:10;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;1070:226:4:-;;;;;;:::i;:::-;;:::i;3976:149:10:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:10;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2064:463:4;;;;;;:::i;:::-;;:::i;:::-;;320:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2156:98:10:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:18;4570:32:10;719:10:18;4586:7:10;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:10;;4433:197;-1:-1:-1;;;4433:197:10:o;1301:324:4:-;1428:4;1444:11;1458:34;1477:4;1482:2;1485:6;1458:18;:34::i;:::-;1444:48;;1510:6;1502:37;;;;-1:-1:-1;;;1502:37:4;;4298:2:23;1502:37:4;;;4280:21:23;4337:2;4317:18;;;4310:30;4376:21;4356:18;;;4349:49;4415:18;;1502:37:4;;;;;;;;;1549:20;1564:4;1549:14;:20::i;:::-;1579:18;1594:2;1579:14;:18::i;:::-;-1:-1:-1;1614:4:4;;1301:324;-1:-1:-1;;;;1301:324:4:o;5873:234:10:-;719:10:18;5961:4:10;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:10;;;;;;;;;;5961:4;;719:10:18;6015:64:10;;719:10:18;;4091:27:10;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;1968:91:4:-;2011:16;2045:7;2038:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2038:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:91;:::o;2367:102:10:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:18;6687:4:10;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:10;;;;;;;;;;6687:4;;719:10:18;6831:15:10;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:10;;4968:2:23;6803:85:10;;;4950:21:23;5007:2;4987:18;;;4980:30;5046:34;5026:18;;;5019:62;5117:7;5097:18;;;5090:35;5142:19;;6803:85:10;4766:401:23;6803:85:10;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;1070:226:4:-;1141:4;1157:11;1171:25;1186:2;1189:6;1171:14;:25::i;:::-;1157:39;;1214:6;1206:34;;;;-1:-1:-1;;;1206:34:4;;5374:2:23;1206:34:4;;;5356:21:23;5413:2;5393:18;;;5386:30;5452:17;5432:18;;;5425:45;5487:18;;1206:34:4;5172:339:23;1206:34:4;1250:18;1265:2;1250:14;:18::i;2064:463::-;2140:6;;-1:-1:-1;;;;;2140:6:4;719:10:18;-1:-1:-1;;;;;2124:22:4;;2116:62;;;;-1:-1:-1;;;2116:62:4;;5718:2:23;2116:62:4;;;5700:21:23;5757:2;5737:18;;;5730:30;5796:29;5776:18;;;5769:57;5843:18;;2116:62:4;5516:351:23;2116:62:4;2196:10;;-1:-1:-1;;;;;2196:10:4;:24;2188:58;;;;-1:-1:-1;;;2188:58:4;;6074:2:23;2188:58:4;;;6056:21:23;6113:2;6093:18;;;6086:30;6152:23;6132:18;;;6125:51;6193:18;;2188:58:4;5872:345:23;2188:58:4;-1:-1:-1;;;;;2264:19:4;;2256:44;;;;-1:-1:-1;;;2256:44:4;;6424:2:23;2256:44:4;;;6406:21:23;6463:2;6443:18;;;6436:30;6502:14;6482:18;;;6475:42;6534:18;;2256:44:4;6222:336:23;2256:44:4;2310:10;:18;;-1:-1:-1;;2310:18:4;-1:-1:-1;;;;;2310:18:4;;;;;;;;;2380:6;;;;;-1:-1:-1;3508:18:10;;;;;;;;;;;2347:173:4;;2416:4;;2515;2347:173;;;;;;;;;;:::i;:::-;;;;;;;;2064:463;:::o;10110:370:10:-;-1:-1:-1;;;;;10241:19:10;;10233:68;;;;-1:-1:-1;;;10233:68:10;;8542:2:23;10233:68:10;;;8524:21:23;8581:2;8561:18;;;8554:30;8620:34;8600:18;;;8593:62;8691:6;8671:18;;;8664:34;8715:19;;10233:68:10;8340:400:23;10233:68:10;-1:-1:-1;;;;;10319:21:10;;10311:68;;;;-1:-1:-1;;;10311:68:10;;8947:2:23;10311:68:10;;;8929:21:23;8986:2;8966:18;;;8959:30;9025:34;9005:18;;;8998:62;9096:4;9076:18;;;9069:32;9118:19;;10311:68:10;8745:398:23;10311:68:10;-1:-1:-1;;;;;10390:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1800:25:23;;;10441:32:10;;1773:18:23;10441:32:10;;;;;;;10110:370;;;:::o;5192:286::-;5319:4;719:10:18;5375:38:10;5391:4;719:10:18;5406:6:10;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;524:541:4:-;-1:-1:-1;;;;;589:25:4;;;;;;:14;:25;;;;;;:30;:58;;;;-1:-1:-1;636:11:4;;-1:-1:-1;;;;;623:24:4;;;636:11;;623:24;;589:58;585:474;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;693:20:4;;;;;3508:18:10;;;;;;;;;;727:8:4;;;:31;;;772:7;:15;;;;;;;;-1:-1:-1;772:15:4;;;;;;;;;;;;;;;-1:-1:-1;;772:15:4;-1:-1:-1;;;;;772:15:4;;;;;;;;;;;;;;;;829:14;:16;;772:15;829:16;:::i;:::-;-1:-1:-1;;;;;801:25:4;;;;;;:14;:25;;;;;:44;;;;873:7;:10;;:7;;801:25;873:10;;;;:::i;:::-;;;;;;;;;;;;;;:17;859:11;:31;;-1:-1:-1;;859:31:4;-1:-1:-1;;;;;873:17:4;;;859:31;;;;;;-1:-1:-1;524:541:4;:::o;585:474::-;-1:-1:-1;;;;;3508:18:10;;3482:7;3508:18;;;;;;;;;;;;992:14:4;:25;;;;;;;984:7;:34;;:7;;992:25;984:34;;;;;;:::i;:::-;;;;;;;;;;;:41;;:64;;;;524:541;:::o;3729:189:10:-;3808:4;719:10:18;3862:28:10;719:10:18;3879:2:10;3883:6;3862:9;:28::i;10761:441::-;-1:-1:-1;;;;;4091:18:10;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10957:37:10;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:10;;9669:2:23;11010:68:10;;;9651:21:23;9708:2;9688:18;;;9681:30;9747:31;9727:18;;;9720:59;9796:18;;11010:68:10;9467:353:23;11010:68:10;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:10;;7593:68;;;;-1:-1:-1;;;7593:68:10;;10027:2:23;7593:68:10;;;10009:21:23;10066:2;10046:18;;;10039:30;10105:34;10085:18;;;10078:62;10176:7;10156:18;;;10149:35;10201:19;;7593:68:10;9825:401:23;7593:68:10;-1:-1:-1;;;;;7679:16:10;;7671:64;;;;-1:-1:-1;;;7671:64:10;;10433:2:23;7671:64:10;;;10415:21:23;10472:2;10452:18;;;10445:30;10511:34;10491:18;;;10484:62;10582:5;10562:18;;;10555:33;10605:19;;7671:64:10;10231:399:23;7671:64:10;-1:-1:-1;;;;;7817:15:10;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:10;;10837:2:23;7842:72:10;;;10819:21:23;10876:2;10856:18;;;10849:30;10915:34;10895:18;;;10888:62;10986:8;10966:18;;;10959:36;11012:19;;7842:72:10;10635:402:23;7842:72:10;-1:-1:-1;;;;;7948:15:10;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:10;8054:4;-1:-1:-1;;;;;8045:26:10;;8064:6;8045:26;;;;1800:25:23;;1788:2;1773:18;;1654:177;8045:26:10;;;;;;;;8082:37;11786:121;169:597:23;281:4;310:2;339;328:9;321:21;371:6;365:13;414:6;409:2;398:9;394:18;387:34;439:1;449:140;463:6;460:1;457:13;449:140;;;558:14;;;554:23;;548:30;524:17;;;543:2;520:26;513:66;478:10;;449:140;;;607:6;604:1;601:13;598:91;;;677:1;672:2;663:6;652:9;648:22;644:31;637:42;598:91;-1:-1:-1;750:2:23;729:15;-1:-1:-1;;725:29:23;710:45;;;;757:2;706:54;;169:597;-1:-1:-1;;;169:597:23:o;771:196::-;839:20;;-1:-1:-1;;;;;888:54:23;;878:65;;868:93;;957:1;954;947:12;868:93;771:196;;;:::o;972:254::-;1040:6;1048;1101:2;1089:9;1080:7;1076:23;1072:32;1069:52;;;1117:1;1114;1107:12;1069:52;1140:29;1159:9;1140:29;:::i;:::-;1130:39;1216:2;1201:18;;;;1188:32;;-1:-1:-1;;;972:254:23:o;1836:328::-;1913:6;1921;1929;1982:2;1970:9;1961:7;1957:23;1953:32;1950:52;;;1998:1;1995;1988:12;1950:52;2021:29;2040:9;2021:29;:::i;:::-;2011:39;;2069:38;2103:2;2092:9;2088:18;2069:38;:::i;:::-;2059:48;;2154:2;2143:9;2139:18;2126:32;2116:42;;1836:328;;;;;:::o;2358:835::-;2577:2;2629:21;;;2699:13;;2602:18;;;2721:22;;;2548:4;;2577:2;2762;;2780:18;;;;2821:15;;;2548:4;2864:303;2878:6;2875:1;2872:13;2864:303;;;2937:13;;2979:9;;-1:-1:-1;;;;;2975:58:23;2963:71;;3074:11;;3068:18;3054:12;;;3047:40;3107:12;;;;3142:15;;;;2900:1;2893:9;2864:303;;;-1:-1:-1;3184:3:23;;2358:835;-1:-1:-1;;;;;;;2358:835:23:o;3198:186::-;3257:6;3310:2;3298:9;3289:7;3285:23;3281:32;3278:52;;;3326:1;3323;3316:12;3278:52;3349:29;3368:9;3349:29;:::i;:::-;3339:39;3198:186;-1:-1:-1;;;3198:186:23:o;3389:260::-;3457:6;3465;3518:2;3506:9;3497:7;3493:23;3489:32;3486:52;;;3534:1;3531;3524:12;3486:52;3557:29;3576:9;3557:29;:::i;:::-;3547:39;;3605:38;3639:2;3628:9;3624:18;3605:38;:::i;:::-;3595:48;;3389:260;;;;;:::o;3654:437::-;3733:1;3729:12;;;;3776;;;3797:61;;3851:4;3843:6;3839:17;3829:27;;3797:61;3904:2;3896:6;3893:14;3873:18;3870:38;3867:218;;-1:-1:-1;;;3938:1:23;3931:88;4042:4;4039:1;4032:15;4070:4;4067:1;4060:15;3867:218;;3654:437;;;:::o;4444:184::-;-1:-1:-1;;;4493:1:23;4486:88;4593:4;4590:1;4583:15;4617:4;4614:1;4607:15;4633:128;4673:3;4704:1;4700:6;4697:1;4694:13;4691:39;;;4710:18;;:::i;:::-;-1:-1:-1;4746:9:23;;4633:128::o;6689:1646::-;6910:4;-1:-1:-1;;;;;7020:2:23;7012:6;7008:15;6997:9;6990:34;7043:2;7093;7085:6;7081:15;7076:2;7065:9;7061:18;7054:43;7145:2;7137:6;7133:15;7128:2;7117:9;7113:18;7106:43;7185:6;7180:2;7169:9;7165:18;7158:34;7229:3;7223;7212:9;7208:19;7201:32;7253:1;7242:12;;7286:6;7280:13;7316:3;7338:1;7366:9;7362:2;7358:18;7348:28;;7426:2;7415:9;7411:18;7448;7438:61;;7492:4;7484:6;7480:17;7470:27;;7438:61;7545:2;7537:6;7534:14;7514:18;7511:38;7508:222;;-1:-1:-1;;;7579:3:23;7572:90;7685:4;7682:1;7675:15;7715:4;7710:3;7703:17;7508:222;7801:3;7786:19;;101;;;144:14;;;7830:18;7857:128;;;;7999:1;7994:315;;;;7823:486;;7857:128;-1:-1:-1;;7890:24:23;;7878:37;;7958:14;;7951:22;7948:1;7944:30;7935:40;;;-1:-1:-1;7857:128:23;;7994:315;6636:1;6629:14;;;6673:4;6660:18;;8089:1;8103:165;8117:6;8114:1;8111:13;8103:165;;;8195:14;;8182:11;;;8175:35;8238:16;;;;8132:10;;8103:165;;;8288:11;;;-1:-1:-1;;7823:486:23;-1:-1:-1;8326:3:23;;6689:1646;-1:-1:-1;;;;;;;;;;;;;6689:1646:23:o;9148:125::-;9188:4;9216:1;9213;9210:8;9207:34;;;9221:18;;:::i;:::-;-1:-1:-1;9258:9:23;;9148:125::o;9278:184::-;-1:-1:-1;;;9327:1:23;9320:88;9427:4;9424:1;9417:15;9451:4;9448:1;9441:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "bindToSong(address)": "decfa258",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "firstHolder()": "1bf7628b",
    "getHolders()": "5fe8e7cc",
    "increaseAllowance(address,uint256)": "39509351",
    "kind()": "04baa00b",
    "ledger()": "56397c35",
    "max()": "6ac5db19",
    "name()": "06fdde03",
    "parentWork()": "1683252d",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ledger\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_kind\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ledger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"song\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"kind\",\"type\":\"string\"}],\"name\":\"SongBinding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_song\",\"type\":\"address\"}],\"name\":\"bindToSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstHolder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHolders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Balance[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kind\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentWork\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getHolders()\":{\"details\":\"this array represt ALL past and current holders of the ERC20 underlying token,  with current active balance this takes some work but it helps discover all holders of a royalty interest in a single logical place. see example implementation of this in SongRegistration.sol\",\"returns\":{\"_0\":\"an array of Balance structs : Balance {address holder, uint256 amount}\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"ledger\":{\"details\":\"i.e a registery or registrar, to be implemented in the future\",\"return\":\"the address of the contract or EOA that initialized the work registration that is the parent of this royalty interest\",\"returns\":{\"_0\":\"the address of the contract or EOA that initialized the work registration that is the parent of this royalty interest\"}},\"parentWork\":{\"details\":\"there is a 1-many relationship between a work and royalty interest tokens  for example, 1 song work, might have two royualty interest tokens, one representing the writing side,and another token representing a recording side a royalty interest token can only belong to a single work, and once bound, can never change a parent\",\"return\":\"the address of the parent work that this royalty interest is bound to\",\"returns\":{\"_0\":\"the address of the parent work that this royalty interest is bound to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"kind()\":{\"notice\":\"returns a string representing what kind of ROyalty interest this is.  i.e in the music business this might be \\\"Recording\\\" or \\\"Composition\\\" royalty interests\"},\"max()\":{\"notice\":\"returns a fixed amoutn of tokens that cannot be changed and represent 100% of the royalty interest for this token. i.e ideally you'd just return '100' here , where each token represents 1% of a royalty interest.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/BaseMusicPortionToken.sol\":\"BaseMusicPortionToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/interfaces/BaseMusicPortionToken.sol\":{\"keccak256\":\"0x5cc66b92ff3be4375c6e311cdc80b9010cbd2941fe0eafbcf6368d71afb36075\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://47ee9bbe9318ff8bc2548d39e5ff5775489be549076a74c4e589ba039ca641f9\",\"dweb:/ipfs/QmVv9FnB5GNYXBZnUzS9Dmvn55H4p6qKaN72G29A43Zt8g\"]},\"contracts/interfaces/IRoyaltyPortionToken.sol\":{\"keccak256\":\"0xe04ae9a76e6e6cd0e3a83e46f69466c7d05a0f17be13c73125ca0404ce228813\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8642b8b97439b0901dcf4099614ab11890a914766eefa8458181c2d47a2f004\",\"dweb:/ipfs/QmYwZN5SrpWrbUjJg5QGXxQ3chGb9fzJT56ZXtjFMeQzbM\"]},\"contracts/interfaces/Structs.sol\":{\"keccak256\":\"0x4a651c3aea455e9b4cbd9b170af510697e6c2a69224e07c2dc2b2ed4a4e84e0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce93d02cb7a6742a15cdd14bcf4d8005b11dbe2291673ef4113d6ce2143f95f1\",\"dweb:/ipfs/QmbMFhJb8QYJFc4g6R7YwheL7Dgyq2gSrxQB36ZK8LzVFA\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ledger",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_kind",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "ledger",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "song",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "kind",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SongBinding",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_song",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bindToSong"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "firstHolder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHolders",
          "outputs": [
            {
              "internalType": "struct Balance[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kind",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ledger",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "max",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "parentWork",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getHolders()": {
            "details": "this array represt ALL past and current holders of the ERC20 underlying token,  with current active balance this takes some work but it helps discover all holders of a royalty interest in a single logical place. see example implementation of this in SongRegistration.sol",
            "returns": {
              "_0": "an array of Balance structs : Balance {address holder, uint256 amount}"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "kind()": {
            "notice": "returns a string representing what kind of ROyalty interest this is.  i.e in the music business this might be \"Recording\" or \"Composition\" royalty interests"
          },
          "max()": {
            "notice": "returns a fixed amoutn of tokens that cannot be changed and represent 100% of the royalty interest for this token. i.e ideally you'd just return '100' here , where each token represents 1% of a royalty interest."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/BaseMusicPortionToken.sol": "BaseMusicPortionToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/BaseMusicPortionToken.sol": {
        "keccak256": "0x5cc66b92ff3be4375c6e311cdc80b9010cbd2941fe0eafbcf6368d71afb36075",
        "urls": [
          "bzz-raw://47ee9bbe9318ff8bc2548d39e5ff5775489be549076a74c4e589ba039ca641f9",
          "dweb:/ipfs/QmVv9FnB5GNYXBZnUzS9Dmvn55H4p6qKaN72G29A43Zt8g"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IRoyaltyPortionToken.sol": {
        "keccak256": "0xe04ae9a76e6e6cd0e3a83e46f69466c7d05a0f17be13c73125ca0404ce228813",
        "urls": [
          "bzz-raw://b8642b8b97439b0901dcf4099614ab11890a914766eefa8458181c2d47a2f004",
          "dweb:/ipfs/QmYwZN5SrpWrbUjJg5QGXxQ3chGb9fzJT56ZXtjFMeQzbM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/Structs.sol": {
        "keccak256": "0x4a651c3aea455e9b4cbd9b170af510697e6c2a69224e07c2dc2b2ed4a4e84e0b",
        "urls": [
          "bzz-raw://ce93d02cb7a6742a15cdd14bcf4d8005b11dbe2291673ef4113d6ce2143f95f1",
          "dweb:/ipfs/QmbMFhJb8QYJFc4g6R7YwheL7Dgyq2gSrxQB36ZK8LzVFA"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/BaseMusicPortionToken.sol",
    "id": 787,
    "exportedSymbols": {
      "Balance": [
        830
      ],
      "BaseMusicPortionToken": [
        786
      ],
      "Context": [
        3186
      ],
      "ERC20": [
        1738
      ],
      "IERC20": [
        1816
      ],
      "IERC20Metadata": [
        1841
      ],
      "IRoyaltyPortionToken": [
        823
      ],
      "RoyaltyTokenData": [
        855
      ],
      "SongMintingParams": [
        867
      ],
      "SplitInfo": [
        846
      ],
      "SplitTarget": [
        837
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2493:4",
    "nodes": [
      {
        "id": 513,
        "nodeType": "PragmaDirective",
        "src": "39:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 514,
        "nodeType": "ImportDirective",
        "src": "63:55:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 787,
        "sourceUnit": 1739,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 515,
        "nodeType": "ImportDirective",
        "src": "119:36:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IRoyaltyPortionToken.sol",
        "file": "./IRoyaltyPortionToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 787,
        "sourceUnit": 824,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 786,
        "nodeType": "ContractDefinition",
        "src": "157:2372:4",
        "nodes": [
          {
            "id": 531,
            "nodeType": "EventDefinition",
            "src": "225:89:4",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7436f71aa25c40311b9ae8ba3476987465977667616417c002b56e645ffbd73e",
            "name": "SongBinding",
            "nameLocation": "231:11:4",
            "parameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ledger",
                  "nameLocation": "251:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "243:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "267:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "259:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "song",
                  "nameLocation": "282:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "274:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "293:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "288:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "308:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "301:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "242:71:4"
            }
          },
          {
            "id": 533,
            "nodeType": "VariableDeclaration",
            "src": "320:18:4",
            "nodes": [],
            "baseFunctions": [
              796
            ],
            "constant": false,
            "functionSelector": "04baa00b",
            "mutability": "mutable",
            "name": "kind",
            "nameLocation": "334:4:4",
            "scope": 786,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 532,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "320:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 535,
            "nodeType": "VariableDeclaration",
            "src": "344:25:4",
            "nodes": [],
            "baseFunctions": [
              814
            ],
            "constant": false,
            "functionSelector": "1683252d",
            "mutability": "mutable",
            "name": "parentWork",
            "nameLocation": "359:10:4",
            "scope": 786,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 534,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 537,
            "nodeType": "VariableDeclaration",
            "src": "376:21:4",
            "nodes": [],
            "baseFunctions": [
              808
            ],
            "constant": false,
            "functionSelector": "56397c35",
            "mutability": "mutable",
            "name": "ledger",
            "nameLocation": "391:6:4",
            "scope": 786,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 536,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 539,
            "nodeType": "VariableDeclaration",
            "src": "409:26:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "1bf7628b",
            "mutability": "mutable",
            "name": "firstHolder",
            "nameLocation": "424:11:4",
            "scope": 786,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 538,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "409:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 543,
            "nodeType": "VariableDeclaration",
            "src": "442:26:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "holders",
            "nameLocation": "461:7:4",
            "scope": 786,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Balance_$830_storage_$dyn_storage",
              "typeString": "struct Balance[]"
            },
            "typeName": {
              "baseType": {
                "id": 541,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 540,
                  "name": "Balance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 830,
                  "src": "442:7:4"
                },
                "referencedDeclaration": 830,
                "src": "442:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Balance_$830_storage_ptr",
                  "typeString": "struct Balance"
                }
              },
              "id": 542,
              "nodeType": "ArrayTypeName",
              "src": "442:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Balance_$830_storage_$dyn_storage_ptr",
                "typeString": "struct Balance[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 547,
            "nodeType": "VariableDeclaration",
            "src": "474:43:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "addressIndexes",
            "nameLocation": "503:14:4",
            "scope": 786,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 546,
              "keyType": {
                "id": 544,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "483:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "474:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 545,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "494:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 616,
            "nodeType": "FunctionDefinition",
            "src": "524:541:4",
            "nodes": [],
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "575:490:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 552,
                          "name": "addressIndexes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 547,
                          "src": "589:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 554,
                        "indexExpression": {
                          "id": 553,
                          "name": "forHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 549,
                          "src": "604:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "589:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "618:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "589:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 557,
                        "name": "forHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "623:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 558,
                        "name": "firstHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "636:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "623:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "589:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 613,
                    "nodeType": "Block",
                    "src": "970:89:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 602,
                                "name": "holders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 543,
                                "src": "984:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Balance_$830_storage_$dyn_storage",
                                  "typeString": "struct Balance storage ref[] storage ref"
                                }
                              },
                              "id": 606,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 603,
                                  "name": "addressIndexes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 547,
                                  "src": "992:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 605,
                                "indexExpression": {
                                  "id": 604,
                                  "name": "forHolder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 549,
                                  "src": "1007:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "992:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "984:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$830_storage",
                                "typeString": "struct Balance storage ref"
                              }
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 829,
                            "src": "984:41:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 609,
                                "name": "forHolder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 549,
                                "src": "1038:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 608,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "1028:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1028:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "984:64:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 612,
                        "nodeType": "ExpressionStatement",
                        "src": "984:64:4"
                      }
                    ]
                  },
                  "id": 614,
                  "nodeType": "IfStatement",
                  "src": "585:474:4",
                  "trueBody": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "649:317:4",
                    "statements": [
                      {
                        "assignments": [
                          563
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 563,
                            "mutability": "mutable",
                            "name": "b",
                            "nameLocation": "678:1:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 601,
                            "src": "663:16:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balance_$830_memory_ptr",
                              "typeString": "struct Balance"
                            },
                            "typeName": {
                              "id": 562,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 561,
                                "name": "Balance",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 830,
                                "src": "663:7:4"
                              },
                              "referencedDeclaration": 830,
                              "src": "663:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$830_storage_ptr",
                                "typeString": "struct Balance"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 564,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "663:16:4"
                      },
                      {
                        "expression": {
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 565,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "693:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$830_memory_ptr",
                                "typeString": "struct Balance memory"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "holder",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 827,
                            "src": "693:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 568,
                            "name": "forHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "704:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "693:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 570,
                        "nodeType": "ExpressionStatement",
                        "src": "693:20:4"
                      },
                      {
                        "expression": {
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 571,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "727:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$830_memory_ptr",
                                "typeString": "struct Balance memory"
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 829,
                            "src": "727:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 575,
                                "name": "forHolder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 549,
                                "src": "748:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 574,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "738:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "738:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "727:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 578,
                        "nodeType": "ExpressionStatement",
                        "src": "727:31:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 582,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "785:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$830_memory_ptr",
                                "typeString": "struct Balance memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Balance_$830_memory_ptr",
                                "typeString": "struct Balance memory"
                              }
                            ],
                            "expression": {
                              "id": 579,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "772:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Balance_$830_storage_$dyn_storage",
                                "typeString": "struct Balance storage ref[] storage ref"
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "772:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Balance_$830_storage_$dyn_storage_ptr_$_t_struct$_Balance_$830_storage_$returns$__$bound_to$_t_array$_t_struct$_Balance_$830_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Balance storage ref[] storage pointer,struct Balance storage ref)"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "772:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 584,
                        "nodeType": "ExpressionStatement",
                        "src": "772:15:4"
                      },
                      {
                        "expression": {
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 585,
                              "name": "addressIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "801:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 587,
                            "indexExpression": {
                              "id": 586,
                              "name": "forHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 549,
                              "src": "816:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "801:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 588,
                                "name": "holders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 543,
                                "src": "829:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Balance_$830_storage_$dyn_storage",
                                  "typeString": "struct Balance storage ref[] storage ref"
                                }
                              },
                              "id": 589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "829:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "844:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "829:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "801:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 593,
                        "nodeType": "ExpressionStatement",
                        "src": "801:44:4"
                      },
                      {
                        "expression": {
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 594,
                            "name": "firstHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "859:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 595,
                                "name": "holders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 543,
                                "src": "873:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Balance_$830_storage_$dyn_storage",
                                  "typeString": "struct Balance storage ref[] storage ref"
                                }
                              },
                              "id": 597,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "881:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "873:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$830_storage",
                                "typeString": "struct Balance storage ref"
                              }
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "holder",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 827,
                            "src": "873:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "859:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 600,
                        "nodeType": "ExpressionStatement",
                        "src": "859:31:4"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateBalances",
            "nameLocation": "533:14:4",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "forHolder",
                  "nameLocation": "556:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "548:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:19:4"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:4"
            },
            "scope": 786,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 646,
            "nodeType": "FunctionDefinition",
            "src": "1070:226:4",
            "nodes": [],
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "1147:149:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1162:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "1157:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 626,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1157:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 630,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "1186:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 631,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "1189:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 628,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1171:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BaseMusicPortionToken_$786_$",
                          "typeString": "type(contract super BaseMusicPortionToken)"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1276,
                      "src": "1171:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1157:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 635,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1214:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1222:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1206:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 640,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "1265:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 639,
                      "name": "updateBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "1250:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:18:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:18:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1285:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 625,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "1278:11:4"
                }
              ]
            },
            "baseFunctions": [
              1276
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1079:8:4",
            "overrides": {
              "id": 622,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1116:8:4"
            },
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1096:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "1088:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1108:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "1100:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1087:28:4"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "1141:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1140:6:4"
            },
            "scope": 786,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 683,
            "nodeType": "FunctionDefinition",
            "src": "1301:324:4",
            "nodes": [],
            "body": {
              "id": 682,
              "nodeType": "Block",
              "src": "1434:191:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 659,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1449:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 682,
                      "src": "1444:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 658,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1444:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 666,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 662,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "1477:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 663,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1482:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 664,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "1485:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 660,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1458:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BaseMusicPortionToken_$786_$",
                          "typeString": "type(contract super BaseMusicPortionToken)"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1352,
                      "src": "1458:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1444:48:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 668,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "1510:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657246726f6d206661696c6564",
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1517:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3",
                          "typeString": "literal_string \"transferFrom failed\""
                        },
                        "value": "transferFrom failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3",
                          "typeString": "literal_string \"transferFrom failed\""
                        }
                      ],
                      "id": 667,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1502:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1502:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:37:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 673,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "1564:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 672,
                      "name": "updateBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "1549:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:20:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 677,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1594:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 676,
                      "name": "updateBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "1579:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1579:18:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:18:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1614:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 657,
                  "id": 681,
                  "nodeType": "Return",
                  "src": "1607:11:4"
                }
              ]
            },
            "baseFunctions": [
              1352
            ],
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1310:12:4",
            "overrides": {
              "id": 654,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1410:8:4"
            },
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1340:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "1332:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1362:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "1354:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1382:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "1374:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1322:72:4"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "1428:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1427:6:4"
            },
            "scope": 786,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 716,
            "nodeType": "FunctionDefinition",
            "src": "1631:255:4",
            "nodes": [],
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "1780:106:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 698,
                      "name": "ledger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "1794:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 699,
                      "name": "_ledger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "1803:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1794:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:16:4"
                },
                {
                  "expression": {
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 702,
                      "name": "kind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 533,
                      "src": "1824:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 703,
                      "name": "_kind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "1831:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1824:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:12:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 707,
                        "name": "_ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "1856:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1864:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1870:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1875:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1870:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1864:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 706,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "1850:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1850:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "1850:28:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 694,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 689,
                    "src": "1765:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 695,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 691,
                    "src": "1772:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 696,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 693,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1738,
                  "src": "1759:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1759:21:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "_ledger",
                  "nameLocation": "1661:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "1653:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "_kind",
                  "nameLocation": "1692:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "1678:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1721:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "1707:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1750:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "1736:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1643:115:4"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1780:0:4"
            },
            "scope": 786,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 724,
            "nodeType": "FunctionDefinition",
            "src": "1892:71:4",
            "nodes": [],
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "1936:27:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "313030",
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1953:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "functionReturnParameters": 720,
                  "id": 722,
                  "nodeType": "Return",
                  "src": "1946:10:4"
                }
              ]
            },
            "baseFunctions": [
              802
            ],
            "functionSelector": "6ac5db19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "max",
            "nameLocation": "1901:3:4",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:4"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "1928:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1927:9:4"
            },
            "scope": 786,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 734,
            "nodeType": "FunctionDefinition",
            "src": "1968:91:4",
            "nodes": [],
            "body": {
              "id": 733,
              "nodeType": "Block",
              "src": "2028:31:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 731,
                    "name": "holders",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 543,
                    "src": "2045:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Balance_$830_storage_$dyn_storage",
                      "typeString": "struct Balance storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 730,
                  "id": 732,
                  "nodeType": "Return",
                  "src": "2038:14:4"
                }
              ]
            },
            "baseFunctions": [
              822
            ],
            "functionSelector": "5fe8e7cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHolders",
            "nameLocation": "1977:10:4",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1987:2:4"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "2011:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Balance_$830_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Balance[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 727,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 726,
                        "name": "Balance",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 830,
                        "src": "2011:7:4"
                      },
                      "referencedDeclaration": 830,
                      "src": "2011:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balance_$830_storage_ptr",
                        "typeString": "struct Balance"
                      }
                    },
                    "id": 728,
                    "nodeType": "ArrayTypeName",
                    "src": "2011:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Balance_$830_storage_$dyn_storage_ptr",
                      "typeString": "struct Balance[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2010:18:4"
            },
            "scope": 786,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 785,
            "nodeType": "FunctionDefinition",
            "src": "2064:463:4",
            "nodes": [],
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "2106:421:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 740,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3176,
                            "src": "2124:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2124:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 742,
                          "name": "ledger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 537,
                          "src": "2140:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2124:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206c656467657220616c6c6f77656420746f2062696e64",
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2148:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bd0e98e3600d4e257c068cce791e0bed74b5f6f602ca006311d13bf281f61d2",
                          "typeString": "literal_string \"only ledger allowed to bind\""
                        },
                        "value": "only ledger allowed to bind"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bd0e98e3600d4e257c068cce791e0bed74b5f6f602ca006311d13bf281f61d2",
                          "typeString": "literal_string \"only ledger allowed to bind\""
                        }
                      ],
                      "id": 739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2116:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "2116:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 748,
                          "name": "parentWork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "2196:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2218:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2210:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 749,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2210:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2210:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2196:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920626f756e6420746f20736f6e67",
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2221:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_109768702b34259b87f69a0e9d3fe05a9c511e4ea01fed2e9dc366ccbd43860e",
                          "typeString": "literal_string \"already bound to song\""
                        },
                        "value": "already bound to song"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_109768702b34259b87f69a0e9d3fe05a9c511e4ea01fed2e9dc366ccbd43860e",
                          "typeString": "literal_string \"already bound to song\""
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2188:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2188:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 758,
                          "name": "_song",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "2264:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2281:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2273:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 759,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2273:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2273:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2264:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420736f6e67",
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2284:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a5899ee89b91347f8685f929ab3bf2a7aa911a10a9f17c0d96627425ff7b8ca",
                          "typeString": "literal_string \"invalid song\""
                        },
                        "value": "invalid song"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a5899ee89b91347f8685f929ab3bf2a7aa911a10a9f17c0d96627425ff7b8ca",
                          "typeString": "literal_string \"invalid song\""
                        }
                      ],
                      "id": 757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2256:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:44:4"
                },
                {
                  "expression": {
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 767,
                      "name": "parentWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "2310:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 768,
                      "name": "_song",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "2323:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2310:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "2310:18:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 772,
                        "name": "ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "2380:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 775,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2416:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseMusicPortionToken_$786",
                              "typeString": "contract BaseMusicPortionToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseMusicPortionToken_$786",
                              "typeString": "contract BaseMusicPortionToken"
                            }
                          ],
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2408:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 773,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2408:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2408:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 777,
                        "name": "parentWork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "2444:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 779,
                            "name": "ledger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "2486:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 778,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1251,
                          "src": "2476:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2476:17:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 781,
                        "name": "kind",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "2515:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 771,
                      "name": "SongBinding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "2347:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,string memory)"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:173:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 783,
                  "nodeType": "EmitStatement",
                  "src": "2342:178:4"
                }
              ]
            },
            "functionSelector": "decfa258",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bindToSong",
            "nameLocation": "2073:10:4",
            "parameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "_song",
                  "nameLocation": "2092:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "2084:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2083:15:4"
            },
            "returnParameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2106:0:4"
            },
            "scope": 786,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 516,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1738,
              "src": "191:5:4"
            },
            "id": 517,
            "nodeType": "InheritanceSpecifier",
            "src": "191:5:4"
          },
          {
            "baseName": {
              "id": 518,
              "name": "IRoyaltyPortionToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 823,
              "src": "198:20:4"
            },
            "id": 519,
            "nodeType": "InheritanceSpecifier",
            "src": "198:20:4"
          }
        ],
        "canonicalName": "BaseMusicPortionToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          786,
          823,
          1738,
          1841,
          1816,
          3186
        ],
        "name": "BaseMusicPortionToken",
        "nameLocation": "166:21:4",
        "scope": 787,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 4
}