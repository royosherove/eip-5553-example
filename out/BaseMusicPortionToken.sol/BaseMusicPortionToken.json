{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ledger",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_kind",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "HolderAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ledger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "song",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "kind",
          "type": "string"
        }
      ],
      "name": "SongBinding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_song",
          "type": "address"
        }
      ],
      "name": "bindToSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHolders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Balance[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "holders",
      "outputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kind",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ledger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentIP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200164e3803806200164e833981016040819052620000349162000259565b8181600362000044838262000399565b50600462000053828262000399565b5050600780546001600160a01b0319166001600160a01b0387161790555060056200007f848262000399565b50620000958468056bc75e2d631000006200009f565b505050506200048c565b6001600160a01b038216620000fa5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010e919062000465565b90915550506001600160a01b038216600090815260208190526040812080548392906200013d90849062000465565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b457600080fd5b81516001600160401b0380821115620001d157620001d16200018c565b604051601f8301601f19908116603f01168101908282118183101715620001fc57620001fc6200018c565b816040528381526020925086838588010111156200021957600080fd5b600091505b838210156200023d57858201830151818301840152908201906200021e565b838211156200024f5760008385830101525b9695505050505050565b600080600080608085870312156200027057600080fd5b84516001600160a01b03811681146200028857600080fd5b60208601519094506001600160401b0380821115620002a657600080fd5b620002b488838901620001a2565b94506040870151915080821115620002cb57600080fd5b620002d988838901620001a2565b93506060870151915080821115620002f057600080fd5b50620002ff87828801620001a2565b91505092959194509250565b600181811c908216806200032057607f821691505b6020821081036200034157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018757600081815260208120601f850160051c81016020861015620003705750805b601f850160051c820191505b8181101562000391578281556001016200037c565b505050505050565b81516001600160401b03811115620003b557620003b56200018c565b620003cd81620003c684546200030b565b8462000347565b602080601f831160018114620004055760008415620003ec5750858301515b600019600386901b1c1916600185901b17855562000391565b600085815260208120601f198616915b82811015620004365788860151825594840194600190910190840162000415565b5085821015620004555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200048757634e487b7160e01b600052601160045260246000fd5b500190565b6111b2806200049c6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80635fe8e7cc116100b2578063a457c2d711610081578063dd62ed3e11610066578063dd62ed3e1461029b578063decfa258146102d4578063f0cc8b62146102e957600080fd5b8063a457c2d714610275578063a9059cbb1461028857600080fd5b80635fe8e7cc146102285780636ac5db191461023d57806370a082311461024457806395d89b411461026d57600080fd5b806323b872dd11610109578063313ce567116100ee578063313ce567146101db57806339509351146101ea57806356397c35146101fd57600080fd5b806323b872dd146101965780632a11ced0146101a957600080fd5b806304baa00b1461013b57806306fdde0314610159578063095ea7b31461016157806318160ddd14610184575b600080fd5b6101436102fc565b6040516101509190610e70565b60405180910390f35b61014361038a565b61017461016f366004610ee1565b61041c565b6040519015158152602001610150565b6002545b604051908152602001610150565b6101746101a4366004610f0b565b610434565b6101bc6101b7366004610f47565b6104b3565b604080516001600160a01b039093168352602083019190915201610150565b60405160128152602001610150565b6101746101f8366004610ee1565b6104eb565b600754610210906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b61023061052a565b6040516101509190610f60565b6064610188565b610188610252366004610fb8565b6001600160a01b031660009081526020819052604090205490565b61014361059f565b610174610283366004610ee1565b6105ae565b610174610296366004610ee1565b610658565b6101886102a9366004610fda565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102e76102e2366004610fb8565b6106c6565b005b600654610210906001600160a01b031681565b600580546103099061100d565b80601f01602080910402602001604051908101604052809291908181526020018280546103359061100d565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b505050505081565b6060600380546103999061100d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c59061100d565b80156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b60003361042a81858561085b565b5060019392505050565b6000806104428585856109b3565b9050806104965760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c65640000000000000000000000000060448201526064015b60405180910390fd5b61049f856109cc565b6104a8846109cc565b506001949350505050565b600881815481106104c357600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061042a908290869061052590879061105d565b61085b565b60606008805480602002602001604051908101604052809291908181526020016000905b82821015610596576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161054e565b50505050905090565b6060600480546103999061100d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561064b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161048d565b6104a8828686840361085b565b6000806106658484610bb9565b9050806106b45760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640161048d565b6106bd336109cc565b61042a846109cc565b6007546001600160a01b0316336001600160a01b0316146107295760405162461bcd60e51b815260206004820152601b60248201527f6f6e6c79206c656467657220616c6c6f77656420746f2062696e640000000000604482015260640161048d565b6006546001600160a01b0316156107825760405162461bcd60e51b815260206004820152601560248201527f616c726561647920626f756e6420746f20736f6e670000000000000000000000604482015260640161048d565b6001600160a01b0381166107d85760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420736f6e670000000000000000000000000000000000000000604482015260640161048d565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038381169182179092556007549091166000818152602081905260409020547f7436f71aa25c40311b9ae8ba3476987465977667616417c002b56e645ffbd73e9230916005604051610850959493929190611075565b60405180910390a150565b6001600160a01b0383166108d65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b0382166109525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000336109c1858285610bc7565b6104a8858585610c59565b6001600160a01b0381166109dd5750565b6001600160a01b03811660009081526009602052604090205480158015610a045750600854155b80610a4e575080158015610a4e5750816001600160a01b03166008600081548110610a3157610a3161114f565b60009182526020909120600290910201546001600160a01b031614155b15610b68576001600160a01b0382811660008181526020818152604080832054815180830190925293815290810183815260088054600180820183559482905292517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee36002909402938401805473ffffffffffffffffffffffffffffffffffffffff19169190971617909555517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee49091015591549091610b0d91611165565b6001600160a01b0384166000818152600960209081526040918290209390935580519182529181018390527f10d110aaa7a117a90eed6e9ec3e96729ce1bc0a35c56b25fa189f0850999fbde910160405180910390a1505050565b6001600160a01b03821660009081526020818152604080832054600990925290912054600880549091908110610ba057610ba061114f565b9060005260206000209060020201600101819055505050565b60003361042a818585610c59565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c535781811015610c465760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048d565b610c53848484840361085b565b50505050565b6001600160a01b038316610cd55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b038216610d515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b03831660009081526020819052604090205481811015610de05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e1790849061105d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e6391815260200190565b60405180910390a3610c53565b600060208083528351808285015260005b81811015610e9d57858101830151858201604001528201610e81565b81811115610eaf576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610edc57600080fd5b919050565b60008060408385031215610ef457600080fd5b610efd83610ec5565b946020939093013593505050565b600080600060608486031215610f2057600080fd5b610f2984610ec5565b9250610f3760208501610ec5565b9150604084013590509250925092565b600060208284031215610f5957600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610fab57815180516001600160a01b03168552860151868501529284019290850190600101610f7d565b5091979650505050505050565b600060208284031215610fca57600080fd5b610fd382610ec5565b9392505050565b60008060408385031215610fed57600080fd5b610ff683610ec5565b915061100460208401610ec5565b90509250929050565b600181811c9082168061102157607f821691505b60208210810361104157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561107057611070611047565b500190565b60006001600160a01b038088168352602081881681850152818716604085015285606085015260a0608085015260009150845482600182811c9150808316806110bf57607f831692505b84831081036110dc57634e487b7160e01b86526022600452602486fd5b60a0880183905260c088018180156110fb57600181146111115761113c565b60ff198616825284151560051b8201975061113c565b60008b81526020902060005b868110156111365781548482015290850190880161111d565b83019850505b50959d9c50505050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008282101561117757611177611047565b50039056fea264697066735822122049c3f3719b51085702431f5bec80d84f286ad242152982207256333ee6309b7b64736f6c634300080f0033",
    "sourceMap": "158:2366:5:-:0;;;1766:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1874:5;1881:7;2044:5:18;:13;1874:5:5;2044::18;:13;:::i;:::-;-1:-1:-1;2067:7:18;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;1904:6:5::1;:16:::0;;-1:-1:-1;;;;;;1904:16:5::1;-1:-1:-1::0;;;;;1904:16:5;::::1;;::::0;;-1:-1:-1;1930:4:5::1;:12;1937:5:::0;1930:4;:12:::1;:::i;:::-;-1:-1:-1::0;1952:30:5::1;1958:7:::0;1967:14:::1;1952:5;:30::i;:::-;1766:223:::0;;;;158:2366;;8402:389:18;-1:-1:-1;;;;;8485:21:18;;8477:65;;;;-1:-1:-1;;;8477:65:18;;4766:2:33;8477:65:18;;;4748:21:33;4805:2;4785:18;;;4778:30;4844:33;4824:18;;;4817:61;4895:18;;8477:65:18;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:18;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:18;;5300:25:33;;;-1:-1:-1;;;;;8688:37:18;;;8705:1;;8688:37;;5288:2:33;5273:18;8688:37:18;;;;;;;8402:389;;:::o;11786:121::-;;;;:::o;14:127:33:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:33;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:33;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:33:o;1036:934::-;1163:6;1171;1179;1187;1240:3;1228:9;1219:7;1215:23;1211:33;1208:53;;;1257:1;1254;1247:12;1208:53;1283:16;;-1:-1:-1;;;;;1328:31:33;;1318:42;;1308:70;;1374:1;1371;1364:12;1308:70;1446:2;1431:18;;1425:25;1397:5;;-1:-1:-1;;;;;;1499:14:33;;;1496:34;;;1526:1;1523;1516:12;1496:34;1549:61;1602:7;1593:6;1582:9;1578:22;1549:61;:::i;:::-;1539:71;;1656:2;1645:9;1641:18;1635:25;1619:41;;1685:2;1675:8;1672:16;1669:36;;;1701:1;1698;1691:12;1669:36;1724:63;1779:7;1768:8;1757:9;1753:24;1724:63;:::i;:::-;1714:73;;1833:2;1822:9;1818:18;1812:25;1796:41;;1862:2;1852:8;1849:16;1846:36;;;1878:1;1875;1868:12;1846:36;;1901:63;1956:7;1945:8;1934:9;1930:24;1901:63;:::i;:::-;1891:73;;;1036:934;;;;;;;:::o;1975:380::-;2054:1;2050:12;;;;2097;;;2118:61;;2172:4;2164:6;2160:17;2150:27;;2118:61;2225:2;2217:6;2214:14;2194:18;2191:38;2188:161;;2271:10;2266:3;2262:20;2259:1;2252:31;2306:4;2303:1;2296:15;2334:4;2331:1;2324:15;2188:161;;1975:380;;;:::o;2486:545::-;2588:2;2583:3;2580:11;2577:448;;;2624:1;2649:5;2645:2;2638:17;2694:4;2690:2;2680:19;2764:2;2752:10;2748:19;2745:1;2741:27;2735:4;2731:38;2800:4;2788:10;2785:20;2782:47;;;-1:-1:-1;2823:4:33;2782:47;2878:2;2873:3;2869:12;2866:1;2862:20;2856:4;2852:31;2842:41;;2933:82;2951:2;2944:5;2941:13;2933:82;;;2996:17;;;2977:1;2966:13;2933:82;;;2937:3;;;2486:545;;;:::o;3207:1352::-;3327:10;;-1:-1:-1;;;;;3349:30:33;;3346:56;;;3382:18;;:::i;:::-;3411:97;3501:6;3461:38;3493:4;3487:11;3461:38;:::i;:::-;3455:4;3411:97;:::i;:::-;3563:4;;3627:2;3616:14;;3644:1;3639:663;;;;4346:1;4363:6;4360:89;;;-1:-1:-1;4415:19:33;;;4409:26;4360:89;-1:-1:-1;;3164:1:33;3160:11;;;3156:24;3152:29;3142:40;3188:1;3184:11;;;3139:57;4462:81;;3609:944;;3639:663;2433:1;2426:14;;;2470:4;2457:18;;-1:-1:-1;;3675:20:33;;;3793:236;3807:7;3804:1;3801:14;3793:236;;;3896:19;;;3890:26;3875:42;;3988:27;;;;3956:1;3944:14;;;;3823:19;;3793:236;;;3797:3;4057:6;4048:7;4045:19;4042:201;;;4118:19;;;4112:26;-1:-1:-1;;4201:1:33;4197:14;;;4213:3;4193:24;4189:37;4185:42;4170:58;4155:74;;4042:201;-1:-1:-1;;;;;4289:1:33;4273:14;;;4269:22;4256:36;;-1:-1:-1;3207:1352:33:o;4924:225::-;4964:3;4995:1;4991:6;4988:1;4985:13;4982:136;;;5040:10;5035:3;5031:20;5028:1;5021:31;5075:4;5072:1;5065:15;5103:4;5100:1;5093:15;4982:136;-1:-1:-1;5134:9:33;;4924:225::o;5154:177::-;158:2366:5;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80635fe8e7cc116100b2578063a457c2d711610081578063dd62ed3e11610066578063dd62ed3e1461029b578063decfa258146102d4578063f0cc8b62146102e957600080fd5b8063a457c2d714610275578063a9059cbb1461028857600080fd5b80635fe8e7cc146102285780636ac5db191461023d57806370a082311461024457806395d89b411461026d57600080fd5b806323b872dd11610109578063313ce567116100ee578063313ce567146101db57806339509351146101ea57806356397c35146101fd57600080fd5b806323b872dd146101965780632a11ced0146101a957600080fd5b806304baa00b1461013b57806306fdde0314610159578063095ea7b31461016157806318160ddd14610184575b600080fd5b6101436102fc565b6040516101509190610e70565b60405180910390f35b61014361038a565b61017461016f366004610ee1565b61041c565b6040519015158152602001610150565b6002545b604051908152602001610150565b6101746101a4366004610f0b565b610434565b6101bc6101b7366004610f47565b6104b3565b604080516001600160a01b039093168352602083019190915201610150565b60405160128152602001610150565b6101746101f8366004610ee1565b6104eb565b600754610210906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b61023061052a565b6040516101509190610f60565b6064610188565b610188610252366004610fb8565b6001600160a01b031660009081526020819052604090205490565b61014361059f565b610174610283366004610ee1565b6105ae565b610174610296366004610ee1565b610658565b6101886102a9366004610fda565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102e76102e2366004610fb8565b6106c6565b005b600654610210906001600160a01b031681565b600580546103099061100d565b80601f01602080910402602001604051908101604052809291908181526020018280546103359061100d565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b505050505081565b6060600380546103999061100d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c59061100d565b80156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b60003361042a81858561085b565b5060019392505050565b6000806104428585856109b3565b9050806104965760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c65640000000000000000000000000060448201526064015b60405180910390fd5b61049f856109cc565b6104a8846109cc565b506001949350505050565b600881815481106104c357600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061042a908290869061052590879061105d565b61085b565b60606008805480602002602001604051908101604052809291908181526020016000905b82821015610596576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161054e565b50505050905090565b6060600480546103999061100d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561064b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161048d565b6104a8828686840361085b565b6000806106658484610bb9565b9050806106b45760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640161048d565b6106bd336109cc565b61042a846109cc565b6007546001600160a01b0316336001600160a01b0316146107295760405162461bcd60e51b815260206004820152601b60248201527f6f6e6c79206c656467657220616c6c6f77656420746f2062696e640000000000604482015260640161048d565b6006546001600160a01b0316156107825760405162461bcd60e51b815260206004820152601560248201527f616c726561647920626f756e6420746f20736f6e670000000000000000000000604482015260640161048d565b6001600160a01b0381166107d85760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420736f6e670000000000000000000000000000000000000000604482015260640161048d565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038381169182179092556007549091166000818152602081905260409020547f7436f71aa25c40311b9ae8ba3476987465977667616417c002b56e645ffbd73e9230916005604051610850959493929190611075565b60405180910390a150565b6001600160a01b0383166108d65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b0382166109525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000336109c1858285610bc7565b6104a8858585610c59565b6001600160a01b0381166109dd5750565b6001600160a01b03811660009081526009602052604090205480158015610a045750600854155b80610a4e575080158015610a4e5750816001600160a01b03166008600081548110610a3157610a3161114f565b60009182526020909120600290910201546001600160a01b031614155b15610b68576001600160a01b0382811660008181526020818152604080832054815180830190925293815290810183815260088054600180820183559482905292517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee36002909402938401805473ffffffffffffffffffffffffffffffffffffffff19169190971617909555517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee49091015591549091610b0d91611165565b6001600160a01b0384166000818152600960209081526040918290209390935580519182529181018390527f10d110aaa7a117a90eed6e9ec3e96729ce1bc0a35c56b25fa189f0850999fbde910160405180910390a1505050565b6001600160a01b03821660009081526020818152604080832054600990925290912054600880549091908110610ba057610ba061114f565b9060005260206000209060020201600101819055505050565b60003361042a818585610c59565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c535781811015610c465760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048d565b610c53848484840361085b565b50505050565b6001600160a01b038316610cd55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b038216610d515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b03831660009081526020819052604090205481811015610de05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e1790849061105d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e6391815260200190565b60405180910390a3610c53565b600060208083528351808285015260005b81811015610e9d57858101830151858201604001528201610e81565b81811115610eaf576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610edc57600080fd5b919050565b60008060408385031215610ef457600080fd5b610efd83610ec5565b946020939093013593505050565b600080600060608486031215610f2057600080fd5b610f2984610ec5565b9250610f3760208501610ec5565b9150604084013590509250925092565b600060208284031215610f5957600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610fab57815180516001600160a01b03168552860151868501529284019290850190600101610f7d565b5091979650505050505050565b600060208284031215610fca57600080fd5b610fd382610ec5565b9392505050565b60008060408385031215610fed57600080fd5b610ff683610ec5565b915061100460208401610ec5565b90509250929050565b600181811c9082168061102157607f821691505b60208210810361104157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561107057611070611047565b500190565b60006001600160a01b038088168352602081881681850152818716604085015285606085015260a0608085015260009150845482600182811c9150808316806110bf57607f831692505b84831081036110dc57634e487b7160e01b86526022600452602486fd5b60a0880183905260c088018180156110fb57600181146111115761113c565b60ff198616825284151560051b8201975061113c565b60008b81526020902060005b868110156111365781548482015290850190880161111d565b83019850505b50959d9c50505050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008282101561117757611177611047565b50039056fea264697066735822122049c3f3719b51085702431f5bec80d84f286ad242152982207256333ee6309b7b64736f6c634300080f0033",
    "sourceMap": "158:2366:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;379:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98:18;;;:::i;4433:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1396:14:33;;1389:22;1371:41;;1359:2;1344:18;4433:197:18;1231:187:33;3244:106:18;3331:12;;3244:106;;;1569:25:33;;;1557:2;1542:18;3244:106:18;1423:177:33;1463:297:5;;;;;;:::i;:::-;;:::i;460:24::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2315:55:33;;;2297:74;;2402:2;2387:18;;2380:34;;;;2270:18;460:24:5;2123:297:33;3093:91:18;;;3175:2;2567:36:33;;2555:2;2540:18;3093:91:18;2425:184:33;5873:234:18;;;;;;:::i;:::-;;:::i;432:21:5:-;;;;;-1:-1:-1;;;;;432:21:5;;;;;;-1:-1:-1;;;;;2778:55:33;;;2760:74;;2748:2;2733:18;432:21:5;2614:226:33;2073:92:5;;;:::i;:::-;;;;;;;:::i;1995:72::-;2057:3;1995:72;;3408:125:18;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:18;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;1192:265:5:-;;;;;;:::i;:::-;;:::i;3976:149:18:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:18;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2171:351:5;;;;;;:::i;:::-;;:::i;:::-;;403:23;;;;;-1:-1:-1;;;;;403:23:5;;;379:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2156:98:18:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:26;4570:32:18;719:10:26;4586:7:18;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:18;;4433:197;-1:-1:-1;;;4433:197:18:o;1463:297:5:-;1560:4;1576:11;1590:36;1609:4;1615:2;1619:6;1590:18;:36::i;:::-;1576:50;;1644:6;1636:38;;;;-1:-1:-1;;;1636:38:5;;4785:2:33;1636:38:5;;;4767:21:33;4824:2;4804:18;;;4797:30;4863:21;4843:18;;;4836:49;4902:18;;1636:38:5;;;;;;;;;1684:20;1699:4;1684:14;:20::i;:::-;1714:18;1729:2;1714:14;:18::i;:::-;-1:-1:-1;1749:4:5;;1463:297;-1:-1:-1;;;;1463:297:5:o;460:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;460:24:5;;;;-1:-1:-1;460:24:5;:::o;5873:234:18:-;719:10:26;5961:4:18;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:18;;;;;;;;;;5961:4;;719:10:26;6015:64:18;;719:10:26;;4091:27:18;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2073:92:5:-;2116:16;2151:7;2144:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2144:14:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2073:92;:::o;2367:102:18:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:26;6687:4:18;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:18;;;;;;;;;;6687:4;;719:10:26;6831:15:18;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:18;;5455:2:33;6803:85:18;;;5437:21:33;5494:2;5474:18;;;5467:30;5533:34;5513:18;;;5506:62;5604:7;5584:18;;;5577:35;5629:19;;6803:85:18;5253:401:33;6803:85:18;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;1192:265:5:-;1263:4;1279:11;1293:26;1308:2;1312:6;1293:14;:26::i;:::-;1279:40;;1337:6;1329:34;;;;-1:-1:-1;;;1329:34:5;;5861:2:33;1329:34:5;;;5843:21:33;5900:2;5880:18;;;5873:30;5939:17;5919:18;;;5912:45;5974:18;;1329:34:5;5659:339:33;1329:34:5;1373:28;719:10:26;1373:14:5;:28::i;:::-;1411:18;1426:2;1411:14;:18::i;2171:351::-;2247:6;;-1:-1:-1;;;;;2247:6:5;719:10:26;-1:-1:-1;;;;;2231:22:5;;2223:62;;;;-1:-1:-1;;;2223:62:5;;6205:2:33;2223:62:5;;;6187:21:33;6244:2;6224:18;;;6217:30;6283:29;6263:18;;;6256:57;6330:18;;2223:62:5;6003:351:33;2223:62:5;2303:8;;-1:-1:-1;;;;;2303:8:5;:22;2295:56;;;;-1:-1:-1;;;2295:56:5;;6561:2:33;2295:56:5;;;6543:21:33;6600:2;6580:18;;;6573:30;6639:23;6619:18;;;6612:51;6680:18;;2295:56:5;6359:345:33;2295:56:5;-1:-1:-1;;;;;2369:19:5;;2361:44;;;;-1:-1:-1;;;2361:44:5;;6911:2:33;2361:44:5;;;6893:21:33;6950:2;6930:18;;;6923:30;6989:14;6969:18;;;6962:42;7021:18;;2361:44:5;6709:336:33;2361:44:5;2415:8;:16;;-1:-1:-1;;2415:16:5;-1:-1:-1;;;;;2415:16:5;;;;;;;;;2458:6;;;;;-1:-1:-1;3508:18:18;;;;;;;;;;;2446:69:5;;2474:4;;2510;2446:69;;;;;;;;;;:::i;:::-;;;;;;;;2171:351;:::o;10110:370:18:-;-1:-1:-1;;;;;10241:19:18;;10233:68;;;;-1:-1:-1;;;10233:68:18;;9029:2:33;10233:68:18;;;9011:21:33;9068:2;9048:18;;;9041:30;9107:34;9087:18;;;9080:62;9178:6;9158:18;;;9151:34;9202:19;;10233:68:18;8827:400:33;10233:68:18;-1:-1:-1;;;;;10319:21:18;;10311:68;;;;-1:-1:-1;;;10311:68:18;;9434:2:33;10311:68:18;;;9416:21:33;9473:2;9453:18;;;9446:30;9512:34;9492:18;;;9485:62;9583:4;9563:18;;;9556:32;9605:19;;10311:68:18;9232:398:33;10311:68:18;-1:-1:-1;;;;;10390:18:18;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1569:25:33;;;10441:32:18;;1542:18:33;10441:32:18;;;;;;;10110:370;;;:::o;5192:286::-;5319:4;719:10:26;5375:38:18;5391:4;719:10:26;5406:6:18;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;540:646:5:-;-1:-1:-1;;;;;604:20:5;;600:57;;540:646;:::o;600:57::-;-1:-1:-1;;;;;687:34:5;;666:18;687:34;;;:15;:34;;;;;;736:14;;:35;;;;-1:-1:-1;754:7:5;:14;:17;736:35;735:87;;;-1:-1:-1;777:13:5;;:44;;;;;813:8;-1:-1:-1;;;;;794:27:5;:7;802:1;794:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:17;-1:-1:-1;;;;;794:17:5;:27;;777:44;731:449;;;-1:-1:-1;;;;;3508:18:18;;;837:15:5;3508:18:18;;;;;;;;;;;;914:41:5;;;;;;;;;;;;;;;;;901:7;:55;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;901:55:5;;;;;;;;;;;;;;;1011:14;;3508:18:18;;1011:16:5;;;:::i;:::-;-1:-1:-1;;;;;983:25:5;;;;;;:15;:25;;;;;;;;;:44;;;;1046:29;;2297:74:33;;;2387:18;;;2380:34;;;1046:29:5;;2270:18:33;1046:29:5;;;;;;;823:263;590:596;540:646;:::o;731:449::-;-1:-1:-1;;;;;3508:18:18;;3482:7;3508:18;;;;;;;;;;;;1114:15:5;:25;;;;;;;1106:7;:34;;:7;;1114:25;1106:34;;;;;;:::i;:::-;;;;;;;;;;;:41;;:63;;;;590:596;540:646;:::o;3729:189:18:-;3808:4;719:10:26;3862:28:18;719:10:26;3879:2:18;3883:6;3862:9;:28::i;10761:441::-;-1:-1:-1;;;;;4091:18:18;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10957:37:18;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:18;;10156:2:33;11010:68:18;;;10138:21:33;10195:2;10175:18;;;10168:30;10234:31;10214:18;;;10207:59;10283:18;;11010:68:18;9954:353:33;11010:68:18;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:18;;7593:68;;;;-1:-1:-1;;;7593:68:18;;10514:2:33;7593:68:18;;;10496:21:33;10553:2;10533:18;;;10526:30;10592:34;10572:18;;;10565:62;10663:7;10643:18;;;10636:35;10688:19;;7593:68:18;10312:401:33;7593:68:18;-1:-1:-1;;;;;7679:16:18;;7671:64;;;;-1:-1:-1;;;7671:64:18;;10920:2:33;7671:64:18;;;10902:21:33;10959:2;10939:18;;;10932:30;10998:34;10978:18;;;10971:62;11069:5;11049:18;;;11042:33;11092:19;;7671:64:18;10718:399:33;7671:64:18;-1:-1:-1;;;;;7817:15:18;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:18;;11324:2:33;7842:72:18;;;11306:21:33;11363:2;11343:18;;;11336:30;11402:34;11382:18;;;11375:62;11473:8;11453:18;;;11446:36;11499:19;;7842:72:18;11122:402:33;7842:72:18;-1:-1:-1;;;;;7948:15:18;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:18;8054:4;-1:-1:-1;;;;;8045:26:18;;8064:6;8045:26;;;;1569:25:33;;1557:2;1542:18;;1423:177;8045:26:18;;;;;;;;8082:37;11786:121;169:597:33;281:4;310:2;339;328:9;321:21;371:6;365:13;414:6;409:2;398:9;394:18;387:34;439:1;449:140;463:6;460:1;457:13;449:140;;;558:14;;;554:23;;548:30;524:17;;;543:2;520:26;513:66;478:10;;449:140;;;607:6;604:1;601:13;598:91;;;677:1;672:2;663:6;652:9;648:22;644:31;637:42;598:91;-1:-1:-1;750:2:33;729:15;-1:-1:-1;;725:29:33;710:45;;;;757:2;706:54;;169:597;-1:-1:-1;;;169:597:33:o;771:196::-;839:20;;-1:-1:-1;;;;;888:54:33;;878:65;;868:93;;957:1;954;947:12;868:93;771:196;;;:::o;972:254::-;1040:6;1048;1101:2;1089:9;1080:7;1076:23;1072:32;1069:52;;;1117:1;1114;1107:12;1069:52;1140:29;1159:9;1140:29;:::i;:::-;1130:39;1216:2;1201:18;;;;1188:32;;-1:-1:-1;;;972:254:33:o;1605:328::-;1682:6;1690;1698;1751:2;1739:9;1730:7;1726:23;1722:32;1719:52;;;1767:1;1764;1757:12;1719:52;1790:29;1809:9;1790:29;:::i;:::-;1780:39;;1838:38;1872:2;1861:9;1857:18;1838:38;:::i;:::-;1828:48;;1923:2;1912:9;1908:18;1895:32;1885:42;;1605:328;;;;;:::o;1938:180::-;1997:6;2050:2;2038:9;2029:7;2025:23;2021:32;2018:52;;;2066:1;2063;2056:12;2018:52;-1:-1:-1;2089:23:33;;1938:180;-1:-1:-1;1938:180:33:o;2845:835::-;3064:2;3116:21;;;3186:13;;3089:18;;;3208:22;;;3035:4;;3064:2;3249;;3267:18;;;;3308:15;;;3035:4;3351:303;3365:6;3362:1;3359:13;3351:303;;;3424:13;;3466:9;;-1:-1:-1;;;;;3462:58:33;3450:71;;3561:11;;3555:18;3541:12;;;3534:40;3594:12;;;;3629:15;;;;3387:1;3380:9;3351:303;;;-1:-1:-1;3671:3:33;;2845:835;-1:-1:-1;;;;;;;2845:835:33:o;3685:186::-;3744:6;3797:2;3785:9;3776:7;3772:23;3768:32;3765:52;;;3813:1;3810;3803:12;3765:52;3836:29;3855:9;3836:29;:::i;:::-;3826:39;3685:186;-1:-1:-1;;;3685:186:33:o;3876:260::-;3944:6;3952;4005:2;3993:9;3984:7;3980:23;3976:32;3973:52;;;4021:1;4018;4011:12;3973:52;4044:29;4063:9;4044:29;:::i;:::-;4034:39;;4092:38;4126:2;4115:9;4111:18;4092:38;:::i;:::-;4082:48;;3876:260;;;;;:::o;4141:437::-;4220:1;4216:12;;;;4263;;;4284:61;;4338:4;4330:6;4326:17;4316:27;;4284:61;4391:2;4383:6;4380:14;4360:18;4357:38;4354:218;;-1:-1:-1;;;4425:1:33;4418:88;4529:4;4526:1;4519:15;4557:4;4554:1;4547:15;4354:218;;4141:437;;;:::o;4931:184::-;-1:-1:-1;;;4980:1:33;4973:88;5080:4;5077:1;5070:15;5104:4;5101:1;5094:15;5120:128;5160:3;5191:1;5187:6;5184:1;5181:13;5178:39;;;5197:18;;:::i;:::-;-1:-1:-1;5233:9:33;;5120:128::o;7176:1646::-;7397:4;-1:-1:-1;;;;;7507:2:33;7499:6;7495:15;7484:9;7477:34;7530:2;7580;7572:6;7568:15;7563:2;7552:9;7548:18;7541:43;7632:2;7624:6;7620:15;7615:2;7604:9;7600:18;7593:43;7672:6;7667:2;7656:9;7652:18;7645:34;7716:3;7710;7699:9;7695:19;7688:32;7740:1;7729:12;;7773:6;7767:13;7803:3;7825:1;7853:9;7849:2;7845:18;7835:28;;7913:2;7902:9;7898:18;7935;7925:61;;7979:4;7971:6;7967:17;7957:27;;7925:61;8032:2;8024:6;8021:14;8001:18;7998:38;7995:222;;-1:-1:-1;;;8066:3:33;8059:90;8172:4;8169:1;8162:15;8202:4;8197:3;8190:17;7995:222;8288:3;8273:19;;101;;;144:14;;;8317:18;8344:128;;;;8486:1;8481:315;;;;8310:486;;8344:128;-1:-1:-1;;8377:24:33;;8365:37;;8445:14;;8438:22;8435:1;8431:30;8422:40;;;-1:-1:-1;8344:128:33;;8481:315;7123:1;7116:14;;;7160:4;7147:18;;8576:1;8590:165;8604:6;8601:1;8598:13;8590:165;;;8682:14;;8669:11;;;8662:35;8725:16;;;;8619:10;;8590:165;;;8775:11;;;-1:-1:-1;;8310:486:33;-1:-1:-1;8813:3:33;;7176:1646;-1:-1:-1;;;;;;;;;;;;;7176:1646:33:o;9635:184::-;-1:-1:-1;;;9684:1:33;9677:88;9784:4;9781:1;9774:15;9808:4;9805:1;9798:15;9824:125;9864:4;9892:1;9889;9886:8;9883:34;;;9897:18;;:::i;:::-;-1:-1:-1;9934:9:33;;9824:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "bindToSong(address)": "decfa258",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getHolders()": "5fe8e7cc",
    "holders(uint256)": "2a11ced0",
    "increaseAllowance(address,uint256)": "39509351",
    "kind()": "04baa00b",
    "ledger()": "56397c35",
    "max()": "6ac5db19",
    "name()": "06fdde03",
    "parentIP()": "f0cc8b62",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ledger\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_kind\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HolderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ledger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"song\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"kind\",\"type\":\"string\"}],\"name\":\"SongBinding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_song\",\"type\":\"address\"}],\"name\":\"bindToSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHolders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Balance[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kind\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentIP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getHolders()\":{\"details\":\"this array represt ALL past and current holders of the ERC20 underlying token, with current active balance this takes some work but it helps discover all holders of a royalty interest in a single logical place. see example implementation of this in SongRegistration.sol\",\"returns\":{\"_0\":\"an array of Balance structs : Balance {address holder, uint256 amount}\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"ledger\":{\"details\":\"i.e a registery or registrar, to be implemented in the future\",\"return\":\"the address of the contract or EOA that initialized the work registration that is the parent of this royalty interest\",\"returns\":{\"_0\":\"the address of the contract or EOA that initialized the work registration that is the parent of this royalty interest\"}},\"parentIP\":{\"details\":\"there is a 1-many relationship between a work and royalty interest tokens for example, 1 song work, might have two royualty interest tokens, one representing the writing side,and another token representing a recording side a royalty interest token can only belong to a single work, and once bound, can never change a parent\",\"return\":\"the address of the parent work that this royalty interest is bound to\",\"returns\":{\"_0\":\"the address of the parent work that this royalty interest is bound to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"kind()\":{\"notice\":\"returns a string representing what kind of ROyalty interest this is. i.e in the music business this might be \\\"Recording\\\" or \\\"Composition\\\" royalty interests\"},\"max()\":{\"notice\":\"returns a fixed amoutn of tokens that cannot be changed and represent 100% of the royalty interest for this token. i.e ideally you'd just return '100' here , where each token represents 1% of a royalty interest.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/BaseMusicPortionToken.sol\":\"BaseMusicPortionToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/interfaces/BaseMusicPortionToken.sol\":{\"keccak256\":\"0x5823aab362fd94a114984bd7d306f3e3d385635cb0200cf0e7164d89869a233e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6568986bd259444c5e1c60b5cb81da156b8051077f3326d55aea7722477b8bf2\",\"dweb:/ipfs/QmRitKSiNEMNARTLpFF4nczfEsXNHHFHM1uR16B7wq3gZn\"]},\"contracts/interfaces/IRoyaltyPortionToken.sol\":{\"keccak256\":\"0xc7e2b78b8ce255bbe87121adf8bd7184b518b37a0f6ec1c4e0779b7fbd25ca0f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://91f17c54f4325e6ce479f54ba33be8f5a38e5c9f7e34f4a215e18a959b50cb7e\",\"dweb:/ipfs/QmTD8jyBcCpiZ29raAVUDSbS9pz9ctXeAPxNUNLosNrfUG\"]},\"contracts/interfaces/Structs.sol\":{\"keccak256\":\"0x92cd5c464994b409bfd1285a0886ce8e1230a77319ecae51f3b5a32d428a931b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://896ef8dfd31388528b6d3c9491e7162f318732c5fc1515b3b4559c4bad59e8c0\",\"dweb:/ipfs/QmZYc6txcEBSxacFUrQGBSzFo5fP5kYf5VHrY5YqNkUv8S\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ledger",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_kind",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "HolderAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "ledger",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "song",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "kind",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SongBinding",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_song",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bindToSong"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHolders",
          "outputs": [
            {
              "internalType": "struct Balance[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "holders",
          "outputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kind",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ledger",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "max",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "parentIP",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getHolders()": {
            "details": "this array represt ALL past and current holders of the ERC20 underlying token, with current active balance this takes some work but it helps discover all holders of a royalty interest in a single logical place. see example implementation of this in SongRegistration.sol",
            "returns": {
              "_0": "an array of Balance structs : Balance {address holder, uint256 amount}"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "kind()": {
            "notice": "returns a string representing what kind of ROyalty interest this is. i.e in the music business this might be \"Recording\" or \"Composition\" royalty interests"
          },
          "max()": {
            "notice": "returns a fixed amoutn of tokens that cannot be changed and represent 100% of the royalty interest for this token. i.e ideally you'd just return '100' here , where each token represents 1% of a royalty interest."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/BaseMusicPortionToken.sol": "BaseMusicPortionToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/BaseMusicPortionToken.sol": {
        "keccak256": "0x5823aab362fd94a114984bd7d306f3e3d385635cb0200cf0e7164d89869a233e",
        "urls": [
          "bzz-raw://6568986bd259444c5e1c60b5cb81da156b8051077f3326d55aea7722477b8bf2",
          "dweb:/ipfs/QmRitKSiNEMNARTLpFF4nczfEsXNHHFHM1uR16B7wq3gZn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IRoyaltyPortionToken.sol": {
        "keccak256": "0xc7e2b78b8ce255bbe87121adf8bd7184b518b37a0f6ec1c4e0779b7fbd25ca0f",
        "urls": [
          "bzz-raw://91f17c54f4325e6ce479f54ba33be8f5a38e5c9f7e34f4a215e18a959b50cb7e",
          "dweb:/ipfs/QmTD8jyBcCpiZ29raAVUDSbS9pz9ctXeAPxNUNLosNrfUG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/Structs.sol": {
        "keccak256": "0x92cd5c464994b409bfd1285a0886ce8e1230a77319ecae51f3b5a32d428a931b",
        "urls": [
          "bzz-raw://896ef8dfd31388528b6d3c9491e7162f318732c5fc1515b3b4559c4bad59e8c0",
          "dweb:/ipfs/QmZYc6txcEBSxacFUrQGBSzFo5fP5kYf5VHrY5YqNkUv8S"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/BaseMusicPortionToken.sol",
    "id": 893,
    "exportedSymbols": {
      "Balance": [
        936
      ],
      "BaseMusicPortionToken": [
        892
      ],
      "Context": [
        25232
      ],
      "ERC20": [
        23784
      ],
      "IERC20": [
        23862
      ],
      "IERC20Metadata": [
        23887
      ],
      "IRoyaltyPortionToken": [
        929
      ],
      "RoyaltyTokenData": [
        961
      ],
      "SongMintingParams": [
        973
      ],
      "SplitInfo": [
        952
      ],
      "SplitTarget": [
        943
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2486:5",
    "nodes": [
      {
        "id": 591,
        "nodeType": "PragmaDirective",
        "src": "39:23:5",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 592,
        "nodeType": "ImportDirective",
        "src": "64:55:5",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 893,
        "sourceUnit": 23785,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 593,
        "nodeType": "ImportDirective",
        "src": "120:36:5",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IRoyaltyPortionToken.sol",
        "file": "./IRoyaltyPortionToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 893,
        "sourceUnit": 930,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 892,
        "nodeType": "ContractDefinition",
        "src": "158:2366:5",
        "nodes": [
          {
            "id": 609,
            "nodeType": "EventDefinition",
            "src": "226:92:5",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7436f71aa25c40311b9ae8ba3476987465977667616417c002b56e645ffbd73e",
            "name": "SongBinding",
            "nameLocation": "232:11:5",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ledger",
                  "nameLocation": "252:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "244:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "244:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "268:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "260:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "song",
                  "nameLocation": "283:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "275:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "297:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "289:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "312:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "305:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "243:74:5"
            }
          },
          {
            "id": 615,
            "nodeType": "EventDefinition",
            "src": "323:50:5",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "10d110aaa7a117a90eed6e9ec3e96729ce1bc0a35c56b25fa189f0850999fbde",
            "name": "HolderAdded",
            "nameLocation": "329:11:5",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "349:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "341:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 613,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "365:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "357:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "340:32:5"
            }
          },
          {
            "id": 617,
            "nodeType": "VariableDeclaration",
            "src": "379:18:5",
            "nodes": [],
            "baseFunctions": [
              902
            ],
            "constant": false,
            "functionSelector": "04baa00b",
            "mutability": "mutable",
            "name": "kind",
            "nameLocation": "393:4:5",
            "scope": 892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 616,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "379:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 619,
            "nodeType": "VariableDeclaration",
            "src": "403:23:5",
            "nodes": [],
            "baseFunctions": [
              920
            ],
            "constant": false,
            "functionSelector": "f0cc8b62",
            "mutability": "mutable",
            "name": "parentIP",
            "nameLocation": "418:8:5",
            "scope": 892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 618,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "403:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 621,
            "nodeType": "VariableDeclaration",
            "src": "432:21:5",
            "nodes": [],
            "baseFunctions": [
              914
            ],
            "constant": false,
            "functionSelector": "56397c35",
            "mutability": "mutable",
            "name": "ledger",
            "nameLocation": "447:6:5",
            "scope": 892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 620,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "432:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 625,
            "nodeType": "VariableDeclaration",
            "src": "460:24:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "2a11ced0",
            "mutability": "mutable",
            "name": "holders",
            "nameLocation": "477:7:5",
            "scope": 892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage",
              "typeString": "struct Balance[]"
            },
            "typeName": {
              "baseType": {
                "id": 623,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 622,
                  "name": "Balance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 936,
                  "src": "460:7:5"
                },
                "referencedDeclaration": 936,
                "src": "460:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Balance_$936_storage_ptr",
                  "typeString": "struct Balance"
                }
              },
              "id": 624,
              "nodeType": "ArrayTypeName",
              "src": "460:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage_ptr",
                "typeString": "struct Balance[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 629,
            "nodeType": "VariableDeclaration",
            "src": "490:43:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "addressLocation",
            "nameLocation": "518:15:5",
            "scope": 892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 628,
              "keyType": {
                "id": 626,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "498:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "490:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 627,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "509:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 717,
            "nodeType": "FunctionDefinition",
            "src": "540:646:5",
            "nodes": [],
            "body": {
              "id": 716,
              "nodeType": "Block",
              "src": "590:596:5",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 634,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "604:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "622:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "614:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "614:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "614:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "604:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 642,
                  "nodeType": "IfStatement",
                  "src": "600:57:5",
                  "trueBody": {
                    "id": 641,
                    "nodeType": "Block",
                    "src": "626:31:5",
                    "statements": [
                      {
                        "functionReturnParameters": 633,
                        "id": 640,
                        "nodeType": "Return",
                        "src": "640:7:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "mutability": "mutable",
                      "name": "foundIndex",
                      "nameLocation": "674:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 716,
                      "src": "666:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "666:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 651,
                  "initialValue": {
                    "baseExpression": {
                      "id": 645,
                      "name": "addressLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "687:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 650,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 648,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 631,
                          "src": "711:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "703:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 646,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "703:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "703:17:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "687:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "666:55:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 652,
                              "name": "foundIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "736:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "749:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "736:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 655,
                                "name": "holders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 625,
                                "src": "754:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage",
                                  "typeString": "struct Balance storage ref[] storage ref"
                                }
                              },
                              "id": 656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "754:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "770:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "754:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "736:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 660,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "735:37:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 661,
                              "name": "foundIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "777:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "789:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "777:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 664,
                                  "name": "holders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 625,
                                  "src": "794:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage",
                                    "typeString": "struct Balance storage ref[] storage ref"
                                  }
                                },
                                "id": 666,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 665,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "802:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "794:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Balance_$936_storage",
                                  "typeString": "struct Balance storage ref"
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 933,
                              "src": "794:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 668,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "813:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "794:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "777:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 671,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "776:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "735:87:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 714,
                    "nodeType": "Block",
                    "src": "1092:88:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 703,
                                "name": "holders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 625,
                                "src": "1106:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage",
                                  "typeString": "struct Balance storage ref[] storage ref"
                                }
                              },
                              "id": 707,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 704,
                                  "name": "addressLocation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 629,
                                  "src": "1114:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 706,
                                "indexExpression": {
                                  "id": 705,
                                  "name": "_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 631,
                                  "src": "1130:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1114:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1106:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$936_storage",
                                "typeString": "struct Balance storage ref"
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 935,
                            "src": "1106:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 710,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "1160:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 709,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23297,
                              "src": "1150:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1150:19:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1106:63:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 713,
                        "nodeType": "ExpressionStatement",
                        "src": "1106:63:5"
                      }
                    ]
                  },
                  "id": 715,
                  "nodeType": "IfStatement",
                  "src": "731:449:5",
                  "trueBody": {
                    "id": 702,
                    "nodeType": "Block",
                    "src": "823:263:5",
                    "statements": [
                      {
                        "assignments": [
                          674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 674,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "845:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 702,
                            "src": "837:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 673,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "837:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 678,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 676,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "865:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 675,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23297,
                            "src": "855:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "855:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "837:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 683,
                                  "name": "_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 631,
                                  "src": "930:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 684,
                                  "name": "balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 674,
                                  "src": "946:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 682,
                                "name": "Balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 936,
                                "src": "914:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Balance_$936_storage_ptr_$",
                                  "typeString": "type(struct Balance storage pointer)"
                                }
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "holder",
                                "amount"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "914:41:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$936_memory_ptr",
                                "typeString": "struct Balance memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Balance_$936_memory_ptr",
                                "typeString": "struct Balance memory"
                              }
                            ],
                            "expression": {
                              "id": 679,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "901:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage",
                                "typeString": "struct Balance storage ref[] storage ref"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "901:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Balance_$936_storage_$dyn_storage_ptr_$_t_struct$_Balance_$936_storage_$returns$__$bound_to$_t_array$_t_struct$_Balance_$936_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Balance storage ref[] storage pointer,struct Balance storage ref)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "901:55:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "901:55:5"
                      },
                      {
                        "expression": {
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 688,
                              "name": "addressLocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 629,
                              "src": "983:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 690,
                            "indexExpression": {
                              "id": 689,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "999:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "983:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 691,
                                "name": "holders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 625,
                                "src": "1011:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage",
                                  "typeString": "struct Balance storage ref[] storage ref"
                                }
                              },
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1011:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1026:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1011:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "983:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 696,
                        "nodeType": "ExpressionStatement",
                        "src": "983:44:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 698,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "1058:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 699,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 674,
                              "src": "1067:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 697,
                            "name": "HolderAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "1046:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1046:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 701,
                        "nodeType": "EmitStatement",
                        "src": "1041:34:5"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateBalances",
            "nameLocation": "549:14:5",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "572:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 717,
                  "src": "564:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:18:5"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "590:0:5"
            },
            "scope": 892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 752,
            "nodeType": "FunctionDefinition",
            "src": "1192:265:5",
            "nodes": [],
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "1269:188:5",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 728,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1284:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 751,
                      "src": "1279:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 727,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1279:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 734,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 731,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "1308:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 732,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1312:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 729,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1293:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BaseMusicPortionToken_$892_$",
                          "typeString": "type(contract super BaseMusicPortionToken)"
                        }
                      },
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23322,
                      "src": "1293:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1279:40:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 736,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "1337:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1329:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 741,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25222,
                          "src": "1388:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1388:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 740,
                      "name": "updateBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "1373:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:28:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 746,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "1426:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 745,
                      "name": "updateBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "1411:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1411:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:18:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1446:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 726,
                  "id": 750,
                  "nodeType": "Return",
                  "src": "1439:11:5"
                }
              ]
            },
            "baseFunctions": [
              23322
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1201:8:5",
            "overrides": {
              "id": 723,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1245:8:5"
            },
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1218:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1210:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1230:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1222:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1209:28:5"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1263:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:6:5"
            },
            "scope": 892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 789,
            "nodeType": "FunctionDefinition",
            "src": "1463:297:5",
            "nodes": [],
            "body": {
              "id": 788,
              "nodeType": "Block",
              "src": "1566:194:5",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 765,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1581:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "1576:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 764,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1576:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 772,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 768,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "1609:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 769,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "1615:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 770,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "1619:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 766,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1590:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BaseMusicPortionToken_$892_$",
                          "typeString": "type(contract super BaseMusicPortionToken)"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23398,
                      "src": "1590:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1576:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 774,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "1644:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657246726f6d206661696c6564",
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1652:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3",
                          "typeString": "literal_string \"transferFrom failed\""
                        },
                        "value": "transferFrom failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3",
                          "typeString": "literal_string \"transferFrom failed\""
                        }
                      ],
                      "id": 773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1636:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:38:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 779,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "1699:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 778,
                      "name": "updateBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "1684:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1684:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:20:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 783,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "1729:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 782,
                      "name": "updateBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "1714:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1714:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "1714:18:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1749:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 763,
                  "id": 787,
                  "nodeType": "Return",
                  "src": "1742:11:5"
                }
              ]
            },
            "baseFunctions": [
              23398
            ],
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1472:12:5",
            "overrides": {
              "id": 760,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1542:8:5"
            },
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1493:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "1485:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1485:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1507:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "1499:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1519:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "1511:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1484:42:5"
            },
            "returnParameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "1560:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1559:6:5"
            },
            "scope": 892,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 822,
            "nodeType": "FunctionDefinition",
            "src": "1766:223:5",
            "nodes": [],
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "1894:95:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 804,
                      "name": "ledger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "1904:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 805,
                      "name": "_ledger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "1913:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1904:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "1904:16:5"
                },
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 808,
                      "name": "kind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "1930:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 809,
                      "name": "_kind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "1937:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1930:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "1930:12:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 813,
                        "name": "_ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "1958:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1967:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1973:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1979:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1973:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1967:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 812,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23601,
                      "src": "1952:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1952:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:30:5"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 800,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 795,
                    "src": "1874:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 801,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 797,
                    "src": "1881:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 802,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 799,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23784,
                  "src": "1868:5:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1868:21:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "_ledger",
                  "nameLocation": "1786:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "1778:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "_kind",
                  "nameLocation": "1809:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "1795:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1830:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "1816:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1851:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "1837:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1837:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:82:5"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1894:0:5"
            },
            "scope": 892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 830,
            "nodeType": "FunctionDefinition",
            "src": "1995:72:5",
            "nodes": [],
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "2040:27:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "313030",
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2057:3:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "functionReturnParameters": 826,
                  "id": 828,
                  "nodeType": "Return",
                  "src": "2050:10:5"
                }
              ]
            },
            "baseFunctions": [
              908
            ],
            "functionSelector": "6ac5db19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "max",
            "nameLocation": "2004:3:5",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2007:2:5"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "2031:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2030:9:5"
            },
            "scope": 892,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 840,
            "nodeType": "FunctionDefinition",
            "src": "2073:92:5",
            "nodes": [],
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "2134:31:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 837,
                    "name": "holders",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 625,
                    "src": "2151:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage",
                      "typeString": "struct Balance storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 836,
                  "id": 838,
                  "nodeType": "Return",
                  "src": "2144:14:5"
                }
              ]
            },
            "baseFunctions": [
              928
            ],
            "functionSelector": "5fe8e7cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHolders",
            "nameLocation": "2082:10:5",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2092:2:5"
            },
            "returnParameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "2116:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Balance_$936_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Balance[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 833,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 832,
                        "name": "Balance",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 936,
                        "src": "2116:7:5"
                      },
                      "referencedDeclaration": 936,
                      "src": "2116:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balance_$936_storage_ptr",
                        "typeString": "struct Balance"
                      }
                    },
                    "id": 834,
                    "nodeType": "ArrayTypeName",
                    "src": "2116:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Balance_$936_storage_$dyn_storage_ptr",
                      "typeString": "struct Balance[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2115:18:5"
            },
            "scope": 892,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 891,
            "nodeType": "FunctionDefinition",
            "src": "2171:351:5",
            "nodes": [],
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "2213:309:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 846,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25222,
                            "src": "2231:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2231:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 848,
                          "name": "ledger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "2247:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2231:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206c656467657220616c6c6f77656420746f2062696e64",
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2255:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bd0e98e3600d4e257c068cce791e0bed74b5f6f602ca006311d13bf281f61d2",
                          "typeString": "literal_string \"only ledger allowed to bind\""
                        },
                        "value": "only ledger allowed to bind"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bd0e98e3600d4e257c068cce791e0bed74b5f6f602ca006311d13bf281f61d2",
                          "typeString": "literal_string \"only ledger allowed to bind\""
                        }
                      ],
                      "id": 845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2223:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 854,
                          "name": "parentIP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 619,
                          "src": "2303:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2323:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2315:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 855,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2315:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2315:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2303:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920626f756e6420746f20736f6e67",
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2327:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_109768702b34259b87f69a0e9d3fe05a9c511e4ea01fed2e9dc366ccbd43860e",
                          "typeString": "literal_string \"already bound to song\""
                        },
                        "value": "already bound to song"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_109768702b34259b87f69a0e9d3fe05a9c511e4ea01fed2e9dc366ccbd43860e",
                          "typeString": "literal_string \"already bound to song\""
                        }
                      ],
                      "id": 853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2295:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "2295:56:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 864,
                          "name": "_song",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "2369:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2386:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2378:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 865,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2378:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2378:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2369:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420736f6e67",
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a5899ee89b91347f8685f929ab3bf2a7aa911a10a9f17c0d96627425ff7b8ca",
                          "typeString": "literal_string \"invalid song\""
                        },
                        "value": "invalid song"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a5899ee89b91347f8685f929ab3bf2a7aa911a10a9f17c0d96627425ff7b8ca",
                          "typeString": "literal_string \"invalid song\""
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2361:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:44:5"
                },
                {
                  "expression": {
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 873,
                      "name": "parentIP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "2415:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 874,
                      "name": "_song",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "2426:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2415:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "2415:16:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 878,
                        "name": "ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "2458:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 881,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2474:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseMusicPortionToken_$892",
                              "typeString": "contract BaseMusicPortionToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseMusicPortionToken_$892",
                              "typeString": "contract BaseMusicPortionToken"
                            }
                          ],
                          "id": 880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2466:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 879,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2466:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2466:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 883,
                        "name": "parentIP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "2481:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 885,
                            "name": "ledger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 621,
                            "src": "2501:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 884,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23297,
                          "src": "2491:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2491:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 887,
                        "name": "kind",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "2510:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 877,
                      "name": "SongBinding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "2446:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,string memory)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 889,
                  "nodeType": "EmitStatement",
                  "src": "2441:74:5"
                }
              ]
            },
            "functionSelector": "decfa258",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bindToSong",
            "nameLocation": "2180:10:5",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "_song",
                  "nameLocation": "2199:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "2191:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:15:5"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2213:0:5"
            },
            "scope": 892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 594,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23784,
              "src": "192:5:5"
            },
            "id": 595,
            "nodeType": "InheritanceSpecifier",
            "src": "192:5:5"
          },
          {
            "baseName": {
              "id": 596,
              "name": "IRoyaltyPortionToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 929,
              "src": "199:20:5"
            },
            "id": 597,
            "nodeType": "InheritanceSpecifier",
            "src": "199:20:5"
          }
        ],
        "canonicalName": "BaseMusicPortionToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          892,
          929,
          23784,
          23887,
          23862,
          25232
        ],
        "name": "BaseMusicPortionToken",
        "nameLocation": "167:21:5",
        "scope": 893,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 5
}