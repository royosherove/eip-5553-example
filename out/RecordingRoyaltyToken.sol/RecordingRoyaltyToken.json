{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ledger",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "HolderAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ledger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "song",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "kind",
          "type": "string"
        }
      ],
      "name": "SongBinding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_song",
          "type": "address"
        }
      ],
      "name": "bindToSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHolders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Balance[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "holders",
      "outputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kind",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ledger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentWork",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200164d3803806200164d833981016040819052620000349162000280565b6040805180820190915260098152687265636f7264696e6760b81b6020820152839083838181600362000068838262000398565b50600462000077828262000398565b5050600780546001600160a01b0319166001600160a01b038716179055506005620000a3848262000398565b50620000b98468056bc75e2d63100000620000c6565b505050505050506200048b565b6001600160a01b038216620001215760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000135919062000464565b90915550506001600160a01b038216600090815260208190526040812080548392906200016490849062000464565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001db57600080fd5b81516001600160401b0380821115620001f857620001f8620001b3565b604051601f8301601f19908116603f01168101908282118183101715620002235762000223620001b3565b816040528381526020925086838588010111156200024057600080fd5b600091505b8382101562000264578582018301518183018401529082019062000245565b83821115620002765760008385830101525b9695505050505050565b6000806000606084860312156200029657600080fd5b83516001600160a01b0381168114620002ae57600080fd5b60208501519093506001600160401b0380821115620002cc57600080fd5b620002da87838801620001c9565b93506040860151915080821115620002f157600080fd5b506200030086828701620001c9565b9150509250925092565b600181811c908216806200031f57607f821691505b6020821081036200034057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ae57600081815260208120601f850160051c810160208610156200036f5750805b601f850160051c820191505b8181101562000390578281556001016200037b565b505050505050565b81516001600160401b03811115620003b457620003b4620001b3565b620003cc81620003c584546200030a565b8462000346565b602080601f831160018114620004045760008415620003eb5750858301515b600019600386901b1c1916600185901b17855562000390565b600085815260208120601f198616915b82811015620004355788860151825594840194600190910190840162000414565b5085821015620004545787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200048657634e487b7160e01b600052601160045260246000fd5b500190565b6111b2806200049b6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806356397c35116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb1461029b578063dd62ed3e146102ae578063decfa258146102e757600080fd5b806395d89b4114610280578063a457c2d71461028857600080fd5b806356397c35146102285780635fe8e7cc1461023b5780636ac5db191461025057806370a082311461025757600080fd5b806318160ddd116101095780632a11ced0116100ee5780632a11ced0146101d4578063313ce56714610206578063395093511461021557600080fd5b806318160ddd146101af57806323b872dd146101c157600080fd5b806304baa00b1461013b57806306fdde0314610159578063095ea7b3146101615780631683252d14610184575b600080fd5b6101436102fc565b6040516101509190610e70565b60405180910390f35b61014361038a565b61017461016f366004610ee1565b61041c565b6040519015158152602001610150565b600654610197906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b6002545b604051908152602001610150565b6101746101cf366004610f0b565b610434565b6101e76101e2366004610f47565b6104b3565b604080516001600160a01b039093168352602083019190915201610150565b60405160128152602001610150565b610174610223366004610ee1565b6104eb565b600754610197906001600160a01b031681565b61024361052a565b6040516101509190610f60565b60646101b3565b6101b3610265366004610fb8565b6001600160a01b031660009081526020819052604090205490565b61014361059f565b610174610296366004610ee1565b6105ae565b6101746102a9366004610ee1565b610658565b6101b36102bc366004610fda565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102fa6102f5366004610fb8565b6106c6565b005b600580546103099061100d565b80601f01602080910402602001604051908101604052809291908181526020018280546103359061100d565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b505050505081565b6060600380546103999061100d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c59061100d565b80156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b60003361042a81858561085b565b5060019392505050565b6000806104428585856109b3565b9050806104965760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c65640000000000000000000000000060448201526064015b60405180910390fd5b61049f856109cc565b6104a8846109cc565b506001949350505050565b600881815481106104c357600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061042a908290869061052590879061105d565b61085b565b60606008805480602002602001604051908101604052809291908181526020016000905b82821015610596576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161054e565b50505050905090565b6060600480546103999061100d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561064b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161048d565b6104a8828686840361085b565b6000806106658484610bb9565b9050806106b45760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640161048d565b6106bd336109cc565b61042a846109cc565b6007546001600160a01b0316336001600160a01b0316146107295760405162461bcd60e51b815260206004820152601b60248201527f6f6e6c79206c656467657220616c6c6f77656420746f2062696e640000000000604482015260640161048d565b6006546001600160a01b0316156107825760405162461bcd60e51b815260206004820152601560248201527f616c726561647920626f756e6420746f20736f6e670000000000000000000000604482015260640161048d565b6001600160a01b0381166107d85760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420736f6e670000000000000000000000000000000000000000604482015260640161048d565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038381169182179092556007549091166000818152602081905260409020547f7436f71aa25c40311b9ae8ba3476987465977667616417c002b56e645ffbd73e9230916005604051610850959493929190611075565b60405180910390a150565b6001600160a01b0383166108d65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b0382166109525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000336109c1858285610bc7565b6104a8858585610c59565b6001600160a01b0381166109dd5750565b6001600160a01b03811660009081526009602052604090205480158015610a045750600854155b80610a4e575080158015610a4e5750816001600160a01b03166008600081548110610a3157610a3161114f565b60009182526020909120600290910201546001600160a01b031614155b15610b68576001600160a01b0382811660008181526020818152604080832054815180830190925293815290810183815260088054600180820183559482905292517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee36002909402938401805473ffffffffffffffffffffffffffffffffffffffff19169190971617909555517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee49091015591549091610b0d91611165565b6001600160a01b0384166000818152600960209081526040918290209390935580519182529181018390527f10d110aaa7a117a90eed6e9ec3e96729ce1bc0a35c56b25fa189f0850999fbde910160405180910390a1505050565b6001600160a01b03821660009081526020818152604080832054600990925290912054600880549091908110610ba057610ba061114f565b9060005260206000209060020201600101819055505050565b60003361042a818585610c59565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c535781811015610c465760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048d565b610c53848484840361085b565b50505050565b6001600160a01b038316610cd55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b038216610d515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b03831660009081526020819052604090205481811015610de05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e1790849061105d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e6391815260200190565b60405180910390a3610c53565b600060208083528351808285015260005b81811015610e9d57858101830151858201604001528201610e81565b81811115610eaf576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610edc57600080fd5b919050565b60008060408385031215610ef457600080fd5b610efd83610ec5565b946020939093013593505050565b600080600060608486031215610f2057600080fd5b610f2984610ec5565b9250610f3760208501610ec5565b9150604084013590509250925092565b600060208284031215610f5957600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610fab57815180516001600160a01b03168552860151868501529284019290850190600101610f7d565b5091979650505050505050565b600060208284031215610fca57600080fd5b610fd382610ec5565b9392505050565b60008060408385031215610fed57600080fd5b610ff683610ec5565b915061100460208401610ec5565b90509250929050565b600181811c9082168061102157607f821691505b60208210810361104157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561107057611070611047565b500190565b60006001600160a01b038088168352602081881681850152818716604085015285606085015260a0608085015260009150845482600182811c9150808316806110bf57607f831692505b84831081036110dc57634e487b7160e01b86526022600452602486fd5b60a0880183905260c088018180156110fb57600181146111115761113c565b60ff198616825284151560051b8201975061113c565b60008b81526020902060005b868110156111365781548482015290850190880161111d565b83019850505b50959d9c50505050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008282101561117757611177611047565b50039056fea26469706673582212205c1cf90f57a1edfc28de96d0a91438e2f5494d0986dfcc30ba4ca55c477405e564736f6c634300080f0033",
    "sourceMap": "114:211:2:-:0;;;176:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1822:223:5;;;;;;;;;;;;-1:-1:-1;;;1822:223:5;;;;279:7:2;;301:5;308:7;301:5;308:7;2044:5:18;:13;301:5:2;2044::18;:13;:::i;:::-;-1:-1:-1;2067:7:18;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;1960:6:5::1;:16:::0;;-1:-1:-1;;;;;;1960:16:5::1;-1:-1:-1::0;;;;;1960:16:5;::::1;;::::0;;-1:-1:-1;1986:4:5::1;:12;1993:5:::0;1986:4;:12:::1;:::i;:::-;-1:-1:-1::0;2008:30:5::1;2014:7:::0;2023:14:::1;2008:5;:30::i;:::-;1822:223:::0;;;;176:147:2;;;114:211;;8402:389:18;-1:-1:-1;;;;;8485:21:18;;8477:65;;;;-1:-1:-1;;;8477:65:18;;4561:2:33;8477:65:18;;;4543:21:33;4600:2;4580:18;;;4573:30;4639:33;4619:18;;;4612:61;4690:18;;8477:65:18;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:18;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:18;;5095:25:33;;;-1:-1:-1;;;;;8688:37:18;;;8705:1;;8688:37;;5083:2:33;5068:18;8688:37:18;;;;;;;8402:389;;:::o;11786:121::-;;;;:::o;14:127:33:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:33;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:33;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:33:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1255:16;;-1:-1:-1;;;;;1300:31:33;;1290:42;;1280:70;;1346:1;1343;1336:12;1280:70;1418:2;1403:18;;1397:25;1369:5;;-1:-1:-1;;;;;;1471:14:33;;;1468:34;;;1498:1;1495;1488:12;1468:34;1521:61;1574:7;1565:6;1554:9;1550:22;1521:61;:::i;:::-;1511:71;;1628:2;1617:9;1613:18;1607:25;1591:41;;1657:2;1647:8;1644:16;1641:36;;;1673:1;1670;1663:12;1641:36;;1696:63;1751:7;1740:8;1729:9;1725:24;1696:63;:::i;:::-;1686:73;;;1036:729;;;;;:::o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;2281:545::-;2383:2;2378:3;2375:11;2372:448;;;2419:1;2444:5;2440:2;2433:17;2489:4;2485:2;2475:19;2559:2;2547:10;2543:19;2540:1;2536:27;2530:4;2526:38;2595:4;2583:10;2580:20;2577:47;;;-1:-1:-1;2618:4:33;2577:47;2673:2;2668:3;2664:12;2661:1;2657:20;2651:4;2647:31;2637:41;;2728:82;2746:2;2739:5;2736:13;2728:82;;;2791:17;;;2772:1;2761:13;2728:82;;;2732:3;;;2281:545;;;:::o;3002:1352::-;3122:10;;-1:-1:-1;;;;;3144:30:33;;3141:56;;;3177:18;;:::i;:::-;3206:97;3296:6;3256:38;3288:4;3282:11;3256:38;:::i;:::-;3250:4;3206:97;:::i;:::-;3358:4;;3422:2;3411:14;;3439:1;3434:663;;;;4141:1;4158:6;4155:89;;;-1:-1:-1;4210:19:33;;;4204:26;4155:89;-1:-1:-1;;2959:1:33;2955:11;;;2951:24;2947:29;2937:40;2983:1;2979:11;;;2934:57;4257:81;;3404:944;;3434:663;2228:1;2221:14;;;2265:4;2252:18;;-1:-1:-1;;3470:20:33;;;3588:236;3602:7;3599:1;3596:14;3588:236;;;3691:19;;;3685:26;3670:42;;3783:27;;;;3751:1;3739:14;;;;3618:19;;3588:236;;;3592:3;3852:6;3843:7;3840:19;3837:201;;;3913:19;;;3907:26;-1:-1:-1;;3996:1:33;3992:14;;;4008:3;3988:24;3984:37;3980:42;3965:58;3950:74;;3837:201;-1:-1:-1;;;;;4084:1:33;4068:14;;;4064:22;4051:36;;-1:-1:-1;3002:1352:33:o;4719:225::-;4759:3;4790:1;4786:6;4783:1;4780:13;4777:136;;;4835:10;4830:3;4826:20;4823:1;4816:31;4870:4;4867:1;4860:15;4898:4;4895:1;4888:15;4777:136;-1:-1:-1;4929:9:33;;4719:225::o;4949:177::-;114:211:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c806356397c35116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb1461029b578063dd62ed3e146102ae578063decfa258146102e757600080fd5b806395d89b4114610280578063a457c2d71461028857600080fd5b806356397c35146102285780635fe8e7cc1461023b5780636ac5db191461025057806370a082311461025757600080fd5b806318160ddd116101095780632a11ced0116100ee5780632a11ced0146101d4578063313ce56714610206578063395093511461021557600080fd5b806318160ddd146101af57806323b872dd146101c157600080fd5b806304baa00b1461013b57806306fdde0314610159578063095ea7b3146101615780631683252d14610184575b600080fd5b6101436102fc565b6040516101509190610e70565b60405180910390f35b61014361038a565b61017461016f366004610ee1565b61041c565b6040519015158152602001610150565b600654610197906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b6002545b604051908152602001610150565b6101746101cf366004610f0b565b610434565b6101e76101e2366004610f47565b6104b3565b604080516001600160a01b039093168352602083019190915201610150565b60405160128152602001610150565b610174610223366004610ee1565b6104eb565b600754610197906001600160a01b031681565b61024361052a565b6040516101509190610f60565b60646101b3565b6101b3610265366004610fb8565b6001600160a01b031660009081526020819052604090205490565b61014361059f565b610174610296366004610ee1565b6105ae565b6101746102a9366004610ee1565b610658565b6101b36102bc366004610fda565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102fa6102f5366004610fb8565b6106c6565b005b600580546103099061100d565b80601f01602080910402602001604051908101604052809291908181526020018280546103359061100d565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b505050505081565b6060600380546103999061100d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c59061100d565b80156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b60003361042a81858561085b565b5060019392505050565b6000806104428585856109b3565b9050806104965760405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c65640000000000000000000000000060448201526064015b60405180910390fd5b61049f856109cc565b6104a8846109cc565b506001949350505050565b600881815481106104c357600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061042a908290869061052590879061105d565b61085b565b60606008805480602002602001604051908101604052809291908181526020016000905b82821015610596576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161054e565b50505050905090565b6060600480546103999061100d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561064b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161048d565b6104a8828686840361085b565b6000806106658484610bb9565b9050806106b45760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640161048d565b6106bd336109cc565b61042a846109cc565b6007546001600160a01b0316336001600160a01b0316146107295760405162461bcd60e51b815260206004820152601b60248201527f6f6e6c79206c656467657220616c6c6f77656420746f2062696e640000000000604482015260640161048d565b6006546001600160a01b0316156107825760405162461bcd60e51b815260206004820152601560248201527f616c726561647920626f756e6420746f20736f6e670000000000000000000000604482015260640161048d565b6001600160a01b0381166107d85760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420736f6e670000000000000000000000000000000000000000604482015260640161048d565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038381169182179092556007549091166000818152602081905260409020547f7436f71aa25c40311b9ae8ba3476987465977667616417c002b56e645ffbd73e9230916005604051610850959493929190611075565b60405180910390a150565b6001600160a01b0383166108d65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b0382166109525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000336109c1858285610bc7565b6104a8858585610c59565b6001600160a01b0381166109dd5750565b6001600160a01b03811660009081526009602052604090205480158015610a045750600854155b80610a4e575080158015610a4e5750816001600160a01b03166008600081548110610a3157610a3161114f565b60009182526020909120600290910201546001600160a01b031614155b15610b68576001600160a01b0382811660008181526020818152604080832054815180830190925293815290810183815260088054600180820183559482905292517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee36002909402938401805473ffffffffffffffffffffffffffffffffffffffff19169190971617909555517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee49091015591549091610b0d91611165565b6001600160a01b0384166000818152600960209081526040918290209390935580519182529181018390527f10d110aaa7a117a90eed6e9ec3e96729ce1bc0a35c56b25fa189f0850999fbde910160405180910390a1505050565b6001600160a01b03821660009081526020818152604080832054600990925290912054600880549091908110610ba057610ba061114f565b9060005260206000209060020201600101819055505050565b60003361042a818585610c59565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c535781811015610c465760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048d565b610c53848484840361085b565b50505050565b6001600160a01b038316610cd55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b038216610d515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b03831660009081526020819052604090205481811015610de05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161048d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e1790849061105d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e6391815260200190565b60405180910390a3610c53565b600060208083528351808285015260005b81811015610e9d57858101830151858201604001528201610e81565b81811115610eaf576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610edc57600080fd5b919050565b60008060408385031215610ef457600080fd5b610efd83610ec5565b946020939093013593505050565b600080600060608486031215610f2057600080fd5b610f2984610ec5565b9250610f3760208501610ec5565b9150604084013590509250925092565b600060208284031215610f5957600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610fab57815180516001600160a01b03168552860151868501529284019290850190600101610f7d565b5091979650505050505050565b600060208284031215610fca57600080fd5b610fd382610ec5565b9392505050565b60008060408385031215610fed57600080fd5b610ff683610ec5565b915061100460208401610ec5565b90509250929050565b600181811c9082168061102157607f821691505b60208210810361104157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561107057611070611047565b500190565b60006001600160a01b038088168352602081881681850152818716604085015285606085015260a0608085015260009150845482600182811c9150808316806110bf57607f831692505b84831081036110dc57634e487b7160e01b86526022600452602486fd5b60a0880183905260c088018180156110fb57600181146111115761113c565b60ff198616825284151560051b8201975061113c565b60008b81526020902060005b868110156111365781548482015290850190880161111d565b83019850505b50959d9c50505050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008282101561117757611177611047565b50039056fea26469706673582212205c1cf90f57a1edfc28de96d0a91438e2f5494d0986dfcc30ba4ca55c477405e564736f6c634300080f0033",
    "sourceMap": "114:211:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;379:18:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98:18;;;:::i;4433:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1396:14:33;;1389:22;1371:41;;1359:2;1344:18;4433:197:18;1231:187:33;403:25:5;;;;;-1:-1:-1;;;;;403:25:5;;;;;;-1:-1:-1;;;;;1587:55:33;;;1569:74;;1557:2;1542:18;403:25:5;1423:226:33;3244:106:18;3331:12;;3244:106;;;1800:25:33;;;1788:2;1773:18;3244:106:18;1654:177:33;1519:297:5;;;;;;:::i;:::-;;:::i;462:24::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2546:55:33;;;2528:74;;2633:2;2618:18;;2611:34;;;;2501:18;462:24:5;2354:297:33;3093:91:18;;;3175:2;2798:36:33;;2786:2;2771:18;3093:91:18;2656:184:33;5873:234:18;;;;;;:::i;:::-;;:::i;434:21:5:-;;;;;-1:-1:-1;;;;;434:21:5;;;2129:92;;;:::i;:::-;;;;;;;:::i;2051:72::-;2113:3;2051:72;;3408:125:18;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:18;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;1248:265:5:-;;;;;;:::i;:::-;;:::i;3976:149:18:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:18;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2227:357:5;;;;;;:::i;:::-;;:::i;:::-;;379:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2156:98:18:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:26;4570:32:18;719:10:26;4586:7:18;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:18;;4433:197;-1:-1:-1;;;4433:197:18:o;1519:297:5:-;1616:4;1632:11;1646:36;1665:4;1671:2;1675:6;1646:18;:36::i;:::-;1632:50;;1700:6;1692:38;;;;-1:-1:-1;;;1692:38:5;;4785:2:33;1692:38:5;;;4767:21:33;4824:2;4804:18;;;4797:30;4863:21;4843:18;;;4836:49;4902:18;;1692:38:5;;;;;;;;;1740:20;1755:4;1740:14;:20::i;:::-;1770:18;1785:2;1770:14;:18::i;:::-;-1:-1:-1;1805:4:5;;1519:297;-1:-1:-1;;;;1519:297:5:o;462:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;462:24:5;;;;-1:-1:-1;462:24:5;:::o;5873:234:18:-;719:10:26;5961:4:18;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:18;;;;;;;;;;5961:4;;719:10:26;6015:64:18;;719:10:26;;4091:27:18;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2129:92:5:-;2172:16;2207:7;2200:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2200:14:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:92;:::o;2367:102:18:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:26;6687:4:18;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:18;;;;;;;;;;6687:4;;719:10:26;6831:15:18;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:18;;5455:2:33;6803:85:18;;;5437:21:33;5494:2;5474:18;;;5467:30;5533:34;5513:18;;;5506:62;5604:7;5584:18;;;5577:35;5629:19;;6803:85:18;5253:401:33;6803:85:18;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;1248:265:5:-;1319:4;1335:11;1349:26;1364:2;1368:6;1349:14;:26::i;:::-;1335:40;;1393:6;1385:34;;;;-1:-1:-1;;;1385:34:5;;5861:2:33;1385:34:5;;;5843:21:33;5900:2;5880:18;;;5873:30;5939:17;5919:18;;;5912:45;5974:18;;1385:34:5;5659:339:33;1385:34:5;1429:28;719:10:26;1429:14:5;:28::i;:::-;1467:18;1482:2;1467:14;:18::i;2227:357::-;2303:6;;-1:-1:-1;;;;;2303:6:5;719:10:26;-1:-1:-1;;;;;2287:22:5;;2279:62;;;;-1:-1:-1;;;2279:62:5;;6205:2:33;2279:62:5;;;6187:21:33;6244:2;6224:18;;;6217:30;6283:29;6263:18;;;6256:57;6330:18;;2279:62:5;6003:351:33;2279:62:5;2359:10;;-1:-1:-1;;;;;2359:10:5;:24;2351:58;;;;-1:-1:-1;;;2351:58:5;;6561:2:33;2351:58:5;;;6543:21:33;6600:2;6580:18;;;6573:30;6639:23;6619:18;;;6612:51;6680:18;;2351:58:5;6359:345:33;2351:58:5;-1:-1:-1;;;;;2427:19:5;;2419:44;;;;-1:-1:-1;;;2419:44:5;;6911:2:33;2419:44:5;;;6893:21:33;6950:2;6930:18;;;6923:30;6989:14;6969:18;;;6962:42;7021:18;;2419:44:5;6709:336:33;2419:44:5;2473:10;:18;;-1:-1:-1;;2473:18:5;-1:-1:-1;;;;;2473:18:5;;;;;;;;;2518:6;;;;;-1:-1:-1;3508:18:18;;;;;;;;;;;2506:71:5;;2534:4;;2572;2506:71;;;;;;;;;;:::i;:::-;;;;;;;;2227:357;:::o;10110:370:18:-;-1:-1:-1;;;;;10241:19:18;;10233:68;;;;-1:-1:-1;;;10233:68:18;;9029:2:33;10233:68:18;;;9011:21:33;9068:2;9048:18;;;9041:30;9107:34;9087:18;;;9080:62;9178:6;9158:18;;;9151:34;9202:19;;10233:68:18;8827:400:33;10233:68:18;-1:-1:-1;;;;;10319:21:18;;10311:68;;;;-1:-1:-1;;;10311:68:18;;9434:2:33;10311:68:18;;;9416:21:33;9473:2;9453:18;;;9446:30;9512:34;9492:18;;;9485:62;9583:4;9563:18;;;9556:32;9605:19;;10311:68:18;9232:398:33;10311:68:18;-1:-1:-1;;;;;10390:18:18;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1800:25:33;;;10441:32:18;;1773:18:33;10441:32:18;;;;;;;10110:370;;;:::o;5192:286::-;5319:4;719:10:26;5375:38:18;5391:4;719:10:26;5406:6:18;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;542:700:5:-;-1:-1:-1;;;;;606:20:5;;602:57;;542:700;:::o;602:57::-;-1:-1:-1;;;;;689:34:5;;668:18;689:34;;;:15;:34;;;;;;738:14;;:35;;;;-1:-1:-1;756:7:5;:14;:17;738:35;737:87;;;-1:-1:-1;779:13:5;;:44;;;;;815:8;-1:-1:-1;;;;;796:27:5;:7;804:1;796:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:17;-1:-1:-1;;;;;796:17:5;:27;;779:44;733:503;;;-1:-1:-1;;;;;3508:18:18;;;839:15:5;3508:18:18;;;;;;;;;;;;916:41:5;;;;;;;;;;;;;;;;;903:7;:55;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;903:55:5;;;;;;;;;;;;;;;1013:14;;3508:18:18;;1013:16:5;;;:::i;:::-;-1:-1:-1;;;;;985:25:5;;;;;;:15;:25;;;;;;;;;:44;;;;1102:29;;2528:74:33;;;2618:18;;;2611:34;;;1102:29:5;;2501:18:33;1102:29:5;;;;;;;825:317;592:650;542:700;:::o;733:503::-;-1:-1:-1;;;;;3508:18:18;;3482:7;3508:18;;;;;;;;;;;;1170:15:5;:25;;;;;;;1162:7;:34;;:7;;1170:25;1162:34;;;;;;:::i;:::-;;;;;;;;;;;:41;;:63;;;;592:650;542:700;:::o;3729:189:18:-;3808:4;719:10:26;3862:28:18;719:10:26;3879:2:18;3883:6;3862:9;:28::i;10761:441::-;-1:-1:-1;;;;;4091:18:18;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10957:37:18;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:18;;10156:2:33;11010:68:18;;;10138:21:33;10195:2;10175:18;;;10168:30;10234:31;10214:18;;;10207:59;10283:18;;11010:68:18;9954:353:33;11010:68:18;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:18;;7593:68;;;;-1:-1:-1;;;7593:68:18;;10514:2:33;7593:68:18;;;10496:21:33;10553:2;10533:18;;;10526:30;10592:34;10572:18;;;10565:62;10663:7;10643:18;;;10636:35;10688:19;;7593:68:18;10312:401:33;7593:68:18;-1:-1:-1;;;;;7679:16:18;;7671:64;;;;-1:-1:-1;;;7671:64:18;;10920:2:33;7671:64:18;;;10902:21:33;10959:2;10939:18;;;10932:30;10998:34;10978:18;;;10971:62;11069:5;11049:18;;;11042:33;11092:19;;7671:64:18;10718:399:33;7671:64:18;-1:-1:-1;;;;;7817:15:18;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:18;;11324:2:33;7842:72:18;;;11306:21:33;11363:2;11343:18;;;11336:30;11402:34;11382:18;;;11375:62;11473:8;11453:18;;;11446:36;11499:19;;7842:72:18;11122:402:33;7842:72:18;-1:-1:-1;;;;;7948:15:18;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:18;8054:4;-1:-1:-1;;;;;8045:26:18;;8064:6;8045:26;;;;1800:25:33;;1788:2;1773:18;;1654:177;8045:26:18;;;;;;;;8082:37;11786:121;169:597:33;281:4;310:2;339;328:9;321:21;371:6;365:13;414:6;409:2;398:9;394:18;387:34;439:1;449:140;463:6;460:1;457:13;449:140;;;558:14;;;554:23;;548:30;524:17;;;543:2;520:26;513:66;478:10;;449:140;;;607:6;604:1;601:13;598:91;;;677:1;672:2;663:6;652:9;648:22;644:31;637:42;598:91;-1:-1:-1;750:2:33;729:15;-1:-1:-1;;725:29:33;710:45;;;;757:2;706:54;;169:597;-1:-1:-1;;;169:597:33:o;771:196::-;839:20;;-1:-1:-1;;;;;888:54:33;;878:65;;868:93;;957:1;954;947:12;868:93;771:196;;;:::o;972:254::-;1040:6;1048;1101:2;1089:9;1080:7;1076:23;1072:32;1069:52;;;1117:1;1114;1107:12;1069:52;1140:29;1159:9;1140:29;:::i;:::-;1130:39;1216:2;1201:18;;;;1188:32;;-1:-1:-1;;;972:254:33:o;1836:328::-;1913:6;1921;1929;1982:2;1970:9;1961:7;1957:23;1953:32;1950:52;;;1998:1;1995;1988:12;1950:52;2021:29;2040:9;2021:29;:::i;:::-;2011:39;;2069:38;2103:2;2092:9;2088:18;2069:38;:::i;:::-;2059:48;;2154:2;2143:9;2139:18;2126:32;2116:42;;1836:328;;;;;:::o;2169:180::-;2228:6;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;-1:-1:-1;2320:23:33;;2169:180;-1:-1:-1;2169:180:33:o;2845:835::-;3064:2;3116:21;;;3186:13;;3089:18;;;3208:22;;;3035:4;;3064:2;3249;;3267:18;;;;3308:15;;;3035:4;3351:303;3365:6;3362:1;3359:13;3351:303;;;3424:13;;3466:9;;-1:-1:-1;;;;;3462:58:33;3450:71;;3561:11;;3555:18;3541:12;;;3534:40;3594:12;;;;3629:15;;;;3387:1;3380:9;3351:303;;;-1:-1:-1;3671:3:33;;2845:835;-1:-1:-1;;;;;;;2845:835:33:o;3685:186::-;3744:6;3797:2;3785:9;3776:7;3772:23;3768:32;3765:52;;;3813:1;3810;3803:12;3765:52;3836:29;3855:9;3836:29;:::i;:::-;3826:39;3685:186;-1:-1:-1;;;3685:186:33:o;3876:260::-;3944:6;3952;4005:2;3993:9;3984:7;3980:23;3976:32;3973:52;;;4021:1;4018;4011:12;3973:52;4044:29;4063:9;4044:29;:::i;:::-;4034:39;;4092:38;4126:2;4115:9;4111:18;4092:38;:::i;:::-;4082:48;;3876:260;;;;;:::o;4141:437::-;4220:1;4216:12;;;;4263;;;4284:61;;4338:4;4330:6;4326:17;4316:27;;4284:61;4391:2;4383:6;4380:14;4360:18;4357:38;4354:218;;-1:-1:-1;;;4425:1:33;4418:88;4529:4;4526:1;4519:15;4557:4;4554:1;4547:15;4354:218;;4141:437;;;:::o;4931:184::-;-1:-1:-1;;;4980:1:33;4973:88;5080:4;5077:1;5070:15;5104:4;5101:1;5094:15;5120:128;5160:3;5191:1;5187:6;5184:1;5181:13;5178:39;;;5197:18;;:::i;:::-;-1:-1:-1;5233:9:33;;5120:128::o;7176:1646::-;7397:4;-1:-1:-1;;;;;7507:2:33;7499:6;7495:15;7484:9;7477:34;7530:2;7580;7572:6;7568:15;7563:2;7552:9;7548:18;7541:43;7632:2;7624:6;7620:15;7615:2;7604:9;7600:18;7593:43;7672:6;7667:2;7656:9;7652:18;7645:34;7716:3;7710;7699:9;7695:19;7688:32;7740:1;7729:12;;7773:6;7767:13;7803:3;7825:1;7853:9;7849:2;7845:18;7835:28;;7913:2;7902:9;7898:18;7935;7925:61;;7979:4;7971:6;7967:17;7957:27;;7925:61;8032:2;8024:6;8021:14;8001:18;7998:38;7995:222;;-1:-1:-1;;;8066:3:33;8059:90;8172:4;8169:1;8162:15;8202:4;8197:3;8190:17;7995:222;8288:3;8273:19;;101;;;144:14;;;8317:18;8344:128;;;;8486:1;8481:315;;;;8310:486;;8344:128;-1:-1:-1;;8377:24:33;;8365:37;;8445:14;;8438:22;8435:1;8431:30;8422:40;;;-1:-1:-1;8344:128:33;;8481:315;7123:1;7116:14;;;7160:4;7147:18;;8576:1;8590:165;8604:6;8601:1;8598:13;8590:165;;;8682:14;;8669:11;;;8662:35;8725:16;;;;8619:10;;8590:165;;;8775:11;;;-1:-1:-1;;8310:486:33;-1:-1:-1;8813:3:33;;7176:1646;-1:-1:-1;;;;;;;;;;;;;7176:1646:33:o;9635:184::-;-1:-1:-1;;;9684:1:33;9677:88;9784:4;9781:1;9774:15;9808:4;9805:1;9798:15;9824:125;9864:4;9892:1;9889;9886:8;9883:34;;;9897:18;;:::i;:::-;-1:-1:-1;9934:9:33;;9824:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "bindToSong(address)": "decfa258",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getHolders()": "5fe8e7cc",
    "holders(uint256)": "2a11ced0",
    "increaseAllowance(address,uint256)": "39509351",
    "kind()": "04baa00b",
    "ledger()": "56397c35",
    "max()": "6ac5db19",
    "name()": "06fdde03",
    "parentWork()": "1683252d",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ledger\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HolderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ledger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"song\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"kind\",\"type\":\"string\"}],\"name\":\"SongBinding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_song\",\"type\":\"address\"}],\"name\":\"bindToSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHolders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Balance[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kind\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentWork\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getHolders()\":{\"details\":\"this array represt ALL past and current holders of the ERC20 underlying token, with current active balance this takes some work but it helps discover all holders of a royalty interest in a single logical place. see example implementation of this in SongRegistration.sol\",\"returns\":{\"_0\":\"an array of Balance structs : Balance {address holder, uint256 amount}\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"kind()\":{\"notice\":\"returns a string representing what kind of ROyalty interest this is. i.e in the music business this might be \\\"Recording\\\" or \\\"Composition\\\" royalty interests\"},\"max()\":{\"notice\":\"returns a fixed amoutn of tokens that cannot be changed and represent 100% of the royalty interest for this token. i.e ideally you'd just return '100' here , where each token represents 1% of a royalty interest.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RecordingRoyaltyToken.sol\":\"RecordingRoyaltyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/RecordingRoyaltyToken.sol\":{\"keccak256\":\"0x3c66533729d45f0b069f635e337b9b4a173ac39cbcb0c85f49cd9557634225eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d7500956326f7a1d5718f353c1dbbf588cd31a1b21a166cf07606d3812befd87\",\"dweb:/ipfs/QmaqjVdbTiukCMYJL3mGeaX8hsUws1c1ZDo5i57GpJjNCk\"]},\"contracts/interfaces/BaseMusicPortionToken.sol\":{\"keccak256\":\"0x9edc30539dc4463cd8bdeee9820e81d2df01f00546fc5eee5745f62a03fe59e4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0dbd310c6dd06262c654c4c66e351a0c7e3b8f6aba8487a046cfc2b98b9a6e17\",\"dweb:/ipfs/Qmb1MGT5P8fDysSF6qGaEWEXswNbcsntezTjobBQaJedGk\"]},\"contracts/interfaces/IRoyaltyPortionToken.sol\":{\"keccak256\":\"0x42b3120753c59a90bea6ef633babeb831001ea9120a9a88174710ec9006aaa36\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3583e8c580f0df5e5fb6c9561dc378541e3e2a1eba88b3140de0fedd4eb832d7\",\"dweb:/ipfs/QmTT6LwEqfKyxAuidvRkaNBEs3hqcRpom8JNdrycQ2bDY9\"]},\"contracts/interfaces/Structs.sol\":{\"keccak256\":\"0x92cd5c464994b409bfd1285a0886ce8e1230a77319ecae51f3b5a32d428a931b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://896ef8dfd31388528b6d3c9491e7162f318732c5fc1515b3b4559c4bad59e8c0\",\"dweb:/ipfs/QmZYc6txcEBSxacFUrQGBSzFo5fP5kYf5VHrY5YqNkUv8S\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ledger",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "HolderAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "ledger",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "song",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "kind",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SongBinding",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_song",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bindToSong"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHolders",
          "outputs": [
            {
              "internalType": "struct Balance[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "holders",
          "outputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kind",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ledger",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "max",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "parentWork",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getHolders()": {
            "details": "this array represt ALL past and current holders of the ERC20 underlying token, with current active balance this takes some work but it helps discover all holders of a royalty interest in a single logical place. see example implementation of this in SongRegistration.sol",
            "returns": {
              "_0": "an array of Balance structs : Balance {address holder, uint256 amount}"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "kind()": {
            "notice": "returns a string representing what kind of ROyalty interest this is. i.e in the music business this might be \"Recording\" or \"Composition\" royalty interests"
          },
          "max()": {
            "notice": "returns a fixed amoutn of tokens that cannot be changed and represent 100% of the royalty interest for this token. i.e ideally you'd just return '100' here , where each token represents 1% of a royalty interest."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/RecordingRoyaltyToken.sol": "RecordingRoyaltyToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/RecordingRoyaltyToken.sol": {
        "keccak256": "0x3c66533729d45f0b069f635e337b9b4a173ac39cbcb0c85f49cd9557634225eb",
        "urls": [
          "bzz-raw://d7500956326f7a1d5718f353c1dbbf588cd31a1b21a166cf07606d3812befd87",
          "dweb:/ipfs/QmaqjVdbTiukCMYJL3mGeaX8hsUws1c1ZDo5i57GpJjNCk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/BaseMusicPortionToken.sol": {
        "keccak256": "0x9edc30539dc4463cd8bdeee9820e81d2df01f00546fc5eee5745f62a03fe59e4",
        "urls": [
          "bzz-raw://0dbd310c6dd06262c654c4c66e351a0c7e3b8f6aba8487a046cfc2b98b9a6e17",
          "dweb:/ipfs/Qmb1MGT5P8fDysSF6qGaEWEXswNbcsntezTjobBQaJedGk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IRoyaltyPortionToken.sol": {
        "keccak256": "0x42b3120753c59a90bea6ef633babeb831001ea9120a9a88174710ec9006aaa36",
        "urls": [
          "bzz-raw://3583e8c580f0df5e5fb6c9561dc378541e3e2a1eba88b3140de0fedd4eb832d7",
          "dweb:/ipfs/QmTT6LwEqfKyxAuidvRkaNBEs3hqcRpom8JNdrycQ2bDY9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/Structs.sol": {
        "keccak256": "0x92cd5c464994b409bfd1285a0886ce8e1230a77319ecae51f3b5a32d428a931b",
        "urls": [
          "bzz-raw://896ef8dfd31388528b6d3c9491e7162f318732c5fc1515b3b4559c4bad59e8c0",
          "dweb:/ipfs/QmZYc6txcEBSxacFUrQGBSzFo5fP5kYf5VHrY5YqNkUv8S"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/RecordingRoyaltyToken.sol",
    "id": 115,
    "exportedSymbols": {
      "Balance": [
        936
      ],
      "BaseMusicPortionToken": [
        892
      ],
      "Context": [
        25232
      ],
      "ERC20": [
        23784
      ],
      "IERC20": [
        23862
      ],
      "IERC20Metadata": [
        23887
      ],
      "IRoyaltyPortionToken": [
        929
      ],
      "RecordingRoyaltyToken": [
        114
      ],
      "RoyaltyTokenData": [
        961
      ],
      "SongMintingParams": [
        973
      ],
      "SplitInfo": [
        952
      ],
      "SplitTarget": [
        943
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:287:2",
    "nodes": [
      {
        "id": 94,
        "nodeType": "PragmaDirective",
        "src": "39:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 95,
        "nodeType": "ImportDirective",
        "src": "64:48:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/BaseMusicPortionToken.sol",
        "file": "./interfaces/BaseMusicPortionToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 115,
        "sourceUnit": 893,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 114,
        "nodeType": "ContractDefinition",
        "src": "114:211:2",
        "nodes": [
          {
            "id": 113,
            "nodeType": "FunctionDefinition",
            "src": "176:147:2",
            "nodes": [],
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "321:2:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 106,
                    "name": "_ledger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99,
                    "src": "279:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "7265636f7264696e67",
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "288:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d41190c60ed58d25bbcbf62e30ff7cddd5baf8fe57504a644094a77c5d1f85d7",
                      "typeString": "literal_string \"recording\""
                    },
                    "value": "recording"
                  },
                  {
                    "id": 108,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101,
                    "src": "301:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 109,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103,
                    "src": "308:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 110,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 105,
                  "name": "BaseMusicPortionToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 892,
                  "src": "257:21:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "257:59:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_ledger",
                  "nameLocation": "196:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "188:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "219:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "205:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "205:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "240:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "226:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "187:61:2"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:0:2"
            },
            "scope": 114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 96,
              "name": "BaseMusicPortionToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 892,
              "src": "148:21:2"
            },
            "id": 97,
            "nodeType": "InheritanceSpecifier",
            "src": "148:21:2"
          }
        ],
        "canonicalName": "RecordingRoyaltyToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          114,
          892,
          929,
          23784,
          23887,
          23862,
          25232
        ],
        "name": "RecordingRoyaltyToken",
        "nameLocation": "123:21:2",
        "scope": 115,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 2
}